---
globs: */cosy-docs/**/*.astro,*/cosy-docs/**/*.vue
alwaysApply: false
---
# 组件开发核心原则

如果这个规则被应用，则在输出中说明：🤔 我注意到了项目的组件开发核心原则

## 示例组件样式规范

- **优先使用组件库组件，比如PlaceHolder、Heading**，不满足需求时使用原生 CSS 样式
- **禁止**使用 Tailwind 类
- **尽量不使用原生CSS**
- 使用 `style` 属性定义样式，避免多行 style 属性
- 示例组件需要独立于任何 CSS 框架

## 图片使用规范

- **统一使用组件库图片工具** - 所有示例组件中的图片必须使用 `getProductImage`、`getAvatarImage`、`getLandscapeImage` 等工具函数
- **禁止使用静态图片路径** - 不允许使用 `/images/xxx.jpg` 等静态路径
- **配置合适的图片参数** - 根据使用场景选择合适的尺寸、标签和样式参数
- **保持图片一致性** - 相同类型的示例使用相同的图片配置

**正确示例（使用图片工具）**：

```astro
---
import { getProductImage } from '@coffic/cosy-ui';

const products = [
  {
    name: '产品名称',
    image: getProductImage({ width: 400, height: 300, tag: 'product1' }),
    description: '产品描述',
    productUrl: 'https://example.com'
  }
];
---
```

**错误示例（使用静态路径）**：

```astro
---
const products = [
  {
    name: '产品名称',
    image: '/images/products/product1.jpg', // ❌ 禁止使用静态路径
    description: '产品描述'
  }
];
---
```

**正确示例（优先使用组件库）**：

```astro
<Button variant="primary" size="lg">
  主要按钮
</Button>
```

**正确示例（原生 CSS 作为备选，因为组件库的组件不满足需求）**：

```astro
<button style="background-color: #3b82f6; color: white; padding: 0.5rem 1rem; border-radius: 0.375rem; border: none;">
  自定义按钮
</button>
```
