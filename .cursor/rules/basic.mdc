---
alwaysApply: true
---

# 基础规则

## 最根本、最重要的规则

- 如果任何规则被应用，则在输出中说明：🤔 我注意到了某某规则
- 在进行任何操作之前，必须回忆和阅读所有规则文件
- 禁止猜测函数的用法、禁止猜测组件的属性，如果遇到不知道的，应去寻找源代码
- 如果遇到不明确的、不能解决的问题，应停下来请教用户

## 临时文件

- 如果需要创建临时的脚本文件，请将其放在 `tmp/` 目录下

## 和用户交流时

- 使用中文
- 如果用户的要求不合理或不符合该技术的最佳实践，应指出

## Code Style

- 遵循关注点分离原则
- 每个文件指处理单一的一件事
- 单个文件不要过大，适当拆分代码到多个文件中
- 写完代码后应再检查一次
- **接口名称必须以大写字母 `I` 开头**
- 使用 PascalCase 命名方式
- 名称应清晰描述接口的用途

## 代码检查清单

- 清理导入了但没用到的代码

## 目录结构

```tree
cosy-ui/                    # 单体仓库根目录
├── packages/               # 包管理目录
│   ├── cosy-ui/            # 核心组件库
│   │   ├── src-astro/      # Astro 组件源码
│   │   ├── src-vue/        # Vue 组件源码
│   │   └── dist/           # 构建输出目录
│   └── cosy-docs/          # 组件库文档项目
│       └── content/      
│           └── manuals/    # 中英文文档仓库
└── scripts/                # 构建和工具脚本
```

## 包管理

使用 PNPM

## 相关规则文件

该目录下还有更多规则文件，**在进行任何步骤时，都要先查看和理解其他规则文件。**
