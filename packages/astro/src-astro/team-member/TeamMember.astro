---
/**
 * @component TeamMember
 *
 * @description
 * TeamMember 组件用于展示单个团队成员的信息，包括姓名、职位、头像、简介和社交媒体链接。
 * 组件采用卡片式设计，支持悬停效果，并可以链接到成员的社交媒体账号。
 *
 * @design
 * 设计理念：
 * 1. 个人展示 - 突出展示团队成员的个人信息和形象
 * 2. 社交连接 - 提供社交媒体链接，方便与团队成员建立联系
 * 3. 视觉一致性 - 使用卡片组件确保与整体设计风格一致
 * 4. 交互反馈 - 悬停时提供视觉反馈，增强用户体验
 *
 * @usage
 * 基本用法：
 * ```astro
 * <TeamMember
 *   name="张三"
 *   role="前端开发工程师"
 *   avatar="/images/avatars/jack.jpg"
 *   bio="拥有5年前端开发经验，专注于React和Vue生态系统。"
 * />
 * ```
 *
 * 包含社交媒体链接：
 * ```astro
 * <TeamMember
 *   name="李四"
 *   role="UI设计师"
 *   avatar="/images/avatars/mary.jpg"
 *   bio="专注于用户体验和界面设计，热爱创造直观易用的产品。"
 *   socialLinks={[
 *     { platform: 'github', url: 'https://github.com/lisi' },
 *     { platform: 'twitter', url: 'https://twitter.com/lisi' },
 *     { platform: 'linkedin', url: 'https://linkedin.com/in/lisi' }
 *   ]}
 * />
 * ```
 */

import '../../style.ts';
import type { ImageSource } from '../image/types.ts';
import type { ShadowSize } from '../../src/common';
import { shadowClasses, hoverShadowClasses } from '../../src/common';
import { SocialIcon, Image, Link } from '../../index.ts';

interface ISocialLink {
    /**
     * 社交媒体平台
     */
    platform: 'github' | 'twitter' | 'linkedin' | 'website' | 'email';
    /**
     * 社交媒体链接URL
     */
    url: string;
}

export interface ITeamMemberProps {
    /**
     * 团队成员姓名
     */
    name: string;
    /**
     * 团队成员职位
     */
    role: string;
    /**
     * 团队成员头像
     */
    avatar: ImageSource;
    /**
     * 团队成员简介
     */
    bio: string;
    /**
     * 社交媒体链接
     */
    socialLinks?: ISocialLink[];
    /**
     * 自定义类名
     */
    class?: string;
    /**
     * 卡片阴影强度
     * @default 'md'
     */
    shadow?: ShadowSize;
    /**
     * 悬停时卡片阴影强度
     * @default 'lg'
     */
    hoverShadow?: ShadowSize;
    /**
     * 是否使用柔和色样式（未激活状态）
     * @default false
     */
    muted?: boolean;
}

// 为兼容旧用法，导出同义类型（不建议继续使用旧名）
export type Props = ITeamMemberProps;
export type SocialLink = ISocialLink;

const {
    name,
    role,
    avatar,
    bio,
    socialLinks,
    class: className = '',
    shadow = 'md',
    hoverShadow = 'lg',
    muted = false,
} = Astro.props;

const shadowClass = shadow ? shadowClasses[shadow] || '' : '';
const hoverShadowClass = hoverShadow
    ? hoverShadowClasses[hoverShadow] || hoverShadowClasses['lg']
    : hoverShadowClasses['lg'];
const mutedClass = muted ? 'muted-content' : '';
---

<div
    class:list={[
        [
            'cosy:card cosy:bg-base-100 cosy:transition-shadow cosy:duration-300',
            shadowClass,
            hoverShadowClass,
            className,
            mutedClass,
        ],
    ]}>
    <figure class="cosy:flex cosy:justify-center cosy:p-4">
        <Image
            src={avatar}
            alt={`${name}'s avatar`}
            width={192}
            height={192}
            rounded="xl"
            transition="fade"
            hover="brightness"
            class="cosy:object-cover cosy:aspect-square"
        />
    </figure>
    <div
        class="cosy:px-6 cosy:py-4 cosy:card-body cosy:flex cosy:flex-col cosy:items-center">
        <h2 class="cosy:mb-1 cosy:font-semibold cosy:text-xl cosy:card-title">
            {name}
        </h2>
        <p class="cosy:mb-3 cosy:text-sm cosy:text-base-content/70">{role}</p>
        <p class="cosy:mb-4 cosy:text-base">{bio}</p>

        {
            socialLinks && socialLinks.length > 0 && (
                <div class="cosy:flex cosy:gap-3 cosy:mt-auto">
                    {socialLinks.map((link: ISocialLink) => (
                        <Link
                            href={link.url}
                            external
                            variant="ghost"
                            class="cosy:hover:bg-base-200 cosy:p-2 cosy:rounded-full cosy:flex cosy:items-center cosy:justify-center"
                            aria-label={`Visit ${name}'s ${link.platform} profile`}>
                            <SocialIcon platform={link.platform} />
                        </Link>
                    ))}
                </div>
            )
        }
    </div>
</div>

<style>
    .muted-content {
        opacity: 0.6;
        pointer-events: none;
    }

    .muted-content * {
        color: #9ca3af !important;
        /* tailwind gray-400 */
        fill: #9ca3af !important;
        /* 对于 SVG 图标 */
    }
</style>
