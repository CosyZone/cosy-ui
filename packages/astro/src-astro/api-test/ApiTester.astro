---
/**
 * @component ApiTester
 *
 * @description
 * ApiTester 组件是一个完整的API测试工具，提供多个API端点的测试界面。
 * 支持参数配置、快速测试、请求发送和结果展示等功能。
 *
 * @design
 * 设计理念：
 * 1. 统一管理 - 在一个界面中管理多个API端点的测试
 * 2. 灵活配置 - 支持多种参数类型和验证规则
 * 3. 快速测试 - 提供预设参数组合，提高测试效率
 * 4. 清晰展示 - 直观展示测试结果和请求详情
 *
 * @usage
 * 基本用法：
 * ```astro
 * <ApiTester endpoints={endpoints} title="用户API测试" />
 * ```
 *
 * 带描述的用法：
 * ```astro
 * <ApiTester
 *   endpoints={endpoints}
 *   title="用户API测试"
 *   description="测试用户相关的所有API接口"
 * />
 * ```
 *
 * @props
 * @prop {IApiEndpoint[]} endpoints - API端点配置列表
 * @prop {string} [title="API 测试"] - 组件标题
 * @prop {string} [description] - 组件描述
 * @prop {boolean} [showHeaders=false] - 是否显示请求头配置
 * @prop {Record<string, string>} [defaultHeaders] - 默认请求头
 * @prop {boolean} [showResponseTime=true] - 是否显示响应时间
 * @prop {boolean} [showRequestDetails=false] - 是否显示请求详情
 * @prop {string} [class] - 自定义CSS类名
 */

import Heading from "../heading/Heading.astro";
import Grid from "../grid/Grid.astro";
import ApiEndpointCard from "./ApiEndpointCard.astro";
import ApiTestScript from "./ApiTestScript.astro";
import type { IApiTesterProps, IApiEndpoint } from "../types/api-test";

const {
	endpoints,
	title = "API 测试",
	description,
	showHeaders = false,
	defaultHeaders,
	showResponseTime = true,
	showRequestDetails = false,
	class: className,
} = Astro.props;
---

<div class={`space-y-8 ${className || ''}`}>
  <div class="text-center">
    <Heading level={1}>
      {title}
    </Heading>
    {
      description && (
        <p class="mt-2 text-base-content/70 max-w-2xl mx-auto">{description}</p>
      )
    }
  </div>

  {/* 请求头配置 */}
  {
    showHeaders && (
      <div class="bg-base-200 p-4 rounded-lg">
        <h3 class="text-lg font-medium mb-3">请求头配置</h3>
        <div class="grid grid-cols-1 md:grid-cols-2 gap-3">
          {defaultHeaders &&
            Object.entries(defaultHeaders).map(([key, value]) => (
              <div class="form-control">
                <label class="label">
                  <span class="label-text">{key}</span>
                </label>
                <input
                  type="text"
                  class="input input-bordered w-full"
                  value={value as string}
                  data-header-key={key}
                  data-header-value={value as string}
                />
              </div>
            ))}
        </div>
      </div>
    )
  }

  <Grid cols={{ base: 1, lg: Math.min(endpoints.length, 2) }}>
    {
      endpoints.map((endpoint: IApiEndpoint) => (
        <ApiEndpointCard endpoint={endpoint} />
      ))
    }
  </Grid>
</div>

<ApiTestScript
  showResponseTime={showResponseTime}
  showRequestDetails={showRequestDetails}
  defaultHeaders={defaultHeaders}
/>
