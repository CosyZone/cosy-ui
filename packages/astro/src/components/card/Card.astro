---
/**
 * @component Card
 *
 * @description
 * Card 组件用于在页面中展示相关内容的容器，通常包含标题、描述和可选的图片。
 * 组件设计简洁大方，具有平滑的动画效果和交互反馈，适合展示产品、文章或功能介绍等内容。
 *
 * @design
 * 设计理念：
 * 1. 视觉层次感 - 通过阴影、悬停效果和微妙的动画创造深度感
 * 2. 内容聚焦 - 简洁的布局让用户关注卡片内容
 * 3. 交互反馈 - 悬停和点击时提供明确的视觉反馈
 * 4. 适应性强 - 响应式设计，适应不同屏幕尺寸
 *
 * @usage
 * 基本用法：
 * ```astro
 * <Card
 *   title="卡片标题"
 *   subtitle="卡片描述文本"
 * >
 *   卡片内容
 * </Card>
 * ```
 *
 * 带图片的卡片：
 * ```astro
 * <Card
 *   title="产品名称"
 *   subtitle="产品描述"
 *   imageUrl="/path/to/image.jpg"
 * >
 *   其他产品信息
 * </Card>
 * ```
 *
 * 可点击的卡片（链接）：
 * ```astro
 * <Card
 *   title="文章标题"
 *   subtitle="文章摘要"
 *   imageUrl="/path/to/image.jpg"
 *   href="/articles/article-slug"
 * />
 * ```
 *
 * 紧凑模式：
 * ```astro
 * <Card
 *   title="紧凑卡片"
 *   subtitle="更小的内边距"
 *   compact
 * >
 *   适合在空间有限的情况下使用
 * </Card>
 * ```
 *
 * 自定义背景色：
 * ```astro
 * <Card
 *   title="特色卡片"
 *   subtitle="使用自定义背景色"
 *   background="primary/10"
 * >
 *   卡片内容
 * </Card>
 * ```
 *
 * 自定义阴影：
 * ```astro
 * <Card
 *   title="带阴影的卡片"
 *   subtitle="使用自定义阴影效果"
 *   shadow="2xl"
 * >
 *   卡片内容
 * </Card>
 * ```
 *
 * @props
 * @prop {BackgroundColor} [background] - 背景色类型，支持所有预设背景色和透明度变体
 * @prop {string} [class] - 自定义CSS类，可用于覆盖默认样式
 * @prop {boolean} [compact] - 是否使用紧凑模式
 * @prop {string} [href] - 如果提供，卡片将变成可点击的链接
 * @prop {ImageSource} [imageUrl] - 卡片顶部图片的URL或ImageMetadata
 * @prop {boolean} [muted] - 是否使用柔和色样式（未激活状态）
 * @prop {ShadowSize} [shadow=xl] - 阴影大小
 * @prop {string} [subtitle] - 卡片副标题或描述
 * @prop {string} title - 卡片标题
 *
 * @slots
 * @slot default - 卡片的主要内容区域
 */

import '../../style.ts';
import type { ICardProps } from './props.ts';
import { getCardCombinedClasses, getCardPaddingClassVue } from './class.ts';
import Image from '../image/Image.astro';
import Container from '../container/Container.astro';

// 从props中分离Container相关的属性和Card自身的属性
const {
    // Container属性
    aspectRatio,
    centered,
    contentCentered,
    flex,
    fit,
    gap,
    height,
    items,
    justify,
    margin,
    muted,
    padding,
    py,
    pt,
    pb,
    px,
    pl,
    pr,
    width,
    rounded,
    background,
    border,
    borderColor,
    shadow,
    // Card属性
    class: className,
    compact,
    href,
    imageUrl,
    subtitle,
    title,
    ...restProps
} = Astro.props as ICardProps;

// 使用共用的工具函数计算组合类名（不包括Container的类名）
const cardClasses = getCardCombinedClasses({
    class: className,
    compact,
    href,
    imageUrl,
    subtitle,
    title,
});

// 内容区域的padding类
const contentPadding = getCardPaddingClassVue(compact);

// 如果是链接卡片，使用a标签，否则使用article标签
const Tag = href ? 'a' : 'article';
---

<Container
    aspectRatio={aspectRatio}
    centered={centered}
    contentCentered={contentCentered}
    flex={flex}
    fit={fit}
    gap={gap}
    height={height}
    items={items}
    justify={justify}
    margin={margin}
    muted={muted}
    padding={padding}
    py={py}
    pt={pt}
    pb={pb}
    px={px}
    pl={pl}
    pr={pr}
    width={width}
    rounded={rounded}
    background={background}
    border={border}
    borderColor={borderColor}
    shadow={shadow}
    class={className}
    {...restProps}>
    <Tag
        ignore-heading
        class:list={cardClasses}
        href={href}
        {...href && { target: '_self' }}>
        {
            imageUrl && (
                <figure class="not-prose cosy:m-0 cosy:p-0">
                    <Image
                        src={imageUrl}
                        alt={title}
                        class="cosy:w-full cosy:h-48 cosy:object-cover cosy:rounded-t-lg"
                    />
                </figure>
            )
        }

        <div class={`cosy:card-body ${contentPadding}`}>
            <h2 class="cosy:card-title cosy:text-xl cosy:font-bold">
                {title}
            </h2>

            {
                subtitle && (
                    <p class="cosy:text-base-content/70 cosy:text-sm cosy:leading-relaxed">
                        {subtitle}
                    </p>
                )
            }

            {
                Astro.slots.has('default') && (
                    <div class="cosy:mt-4">
                        <slot />
                    </div>
                )
            }
        </div>
    </Tag>
</Container>
