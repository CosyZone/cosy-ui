---
import BaseLayout from '@/layouts/BaseLayout.astro';
import { Alert, Error404, type ISidebarItem, Link, ListItem } from '@coffic/cosy-ui';
import { manualRepo, ManualDoc } from '@coffic/cosy-content';
import type { RenderResult } from 'astro:content';

const { lang, slug } = Astro.params;
const id = slug ? `${lang}/${slug}` : `${lang}`;
const doc = await manualRepo.find(id);
let title = '';
let renderResult: RenderResult | null = null;
let sidebarItems: ISidebarItem | null = null;
let courseDescription = '';
let childrenDocs: ManualDoc[] = [];
let isBeta = false;

if (doc) {
  title = doc.getTitle();
  renderResult = await doc.render();

  // 获取顶级文档
  const topDoc = await doc.getAncestor(1);
  if (topDoc) {
    sidebarItems = await topDoc.toSidebarItem();
    courseDescription = doc.getDescription();
    childrenDocs = await doc.getChildren();
    isBeta = doc.getBadge() === 'beta';
  }
} else {
  title = '404 Not Found';
}

export const getStaticPaths = async () => {
  return await manualRepo.getStaticPaths();
};
---

<BaseLayout title={title} sidebarItems={sidebarItems}>
  {
    renderResult ? (
      <>
        {isBeta && (
          <Alert type="warning" closable={false} marginY="md">
            {lang === 'zh-cn'
              ? '当前版本为 Beta，可能不稳定。请谨慎使用。'
              : 'The current version is Beta, which may be unstable. Please use with caution.'}
          </Alert>
        )}

        <renderResult.Content />

        {childrenDocs.length > 0 && (
                    <h2>目录</h2>
                    <ul>
                        {childrenDocs.map(child => (
                            <ListItem>
                                <Link href={`${child.getLink()}`} class="no-underline">
                                    {child.getTitle()}
                                </Link>
                            </ListItem>
                        ))}
                    </ul>
                )}
      </>
    ) : (
      <Error404 debugKVs={{ slug }} />
    )
  }
</BaseLayout>
