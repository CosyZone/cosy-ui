---



/**
 * @component AnimationDemo
 * @description 动效展示 - Apple 风格的 tab 切换展示多个交互组件
 */

import {
    Alert,
    Badge,
    Button,
    Card,
    Container,
    getProductImage,
    Heading,
} from '@coffic/cosy-ui';

export interface Props {
    lang: string;
}

const { lang } = Astro.props;

const title = lang === 'zh-cn' ? '令人愉悦的交互' : 'Delightful Interactions';

const subtitle =
    lang === 'zh-cn'
        ? '精心设计的交互效果，提升用户体验'
        : 'Carefully crafted interactions to enhance user experience';

// Tab 配置
const tabs =
    lang === 'zh-cn'
        ? [
              { id: 'buttons', label: '按钮' },
              { id: 'cards', label: '卡片' },
              { id: 'alerts', label: '提示' },
              { id: 'badges', label: '徽章' },
          ]
        : [
              { id: 'buttons', label: 'Buttons' },
              { id: 'cards', label: 'Cards' },
              { id: 'alerts', label: 'Alerts' },
              { id: 'badges', label: 'Badges' },
          ];

const productImage = getProductImage({
    width: 400,
    height: 300,
    randomSeed: 'card-demo',
});
---

<Container width="full" padding="2xl" background="secondary/10" margin="none">
    <Heading level={2} align="center" size="3xl" weight="bold" margin="lg">
        {title}
    </Heading>
    <Heading
        level={3}
        align="center"
        size="lg"
        weight="normal"
        color="muted"
        margin="xl">
        {subtitle}
    </Heading>

    <Container width="2xl" margin="xl">
        <!-- Apple 风格 Tab 导航 -->
        <div class="tab-nav-wrapper">
            <div class="tab-nav-container">
                {
                    tabs.map((tab) => (
                        <button class="interaction-tab" data-tab={tab.id}>
                            {tab.label}
                        </button>
                    ))
                }
            </div>
        </div>

        <!-- Tab 内容区域 -->
        <div class="tabs-content-wrapper">
            <!-- Buttons Tab -->
            <div id="buttons" class="tab-content">
                <Container
                    flex="row"
                    gap="lg"
                    padding="xl"
                    contentCentered
                    class="button-flex-wrap">
                    <Button variant="primary" size="lg" class="btn-hover-lift">
                        {lang === 'zh-cn' ? '悬停上浮' : 'Hover Lift'}
                    </Button>
                    <Button
                        variant="secondary"
                        size="lg"
                        class="btn-hover-scale">
                        {lang === 'zh-cn' ? '悬停放大' : 'Hover Scale'}
                    </Button>
                    <Button variant="accent" size="lg" class="btn-hover-glow">
                        {lang === 'zh-cn' ? '悬停发光' : 'Hover Glow'}
                    </Button>
                </Container>
            </div>

            <!-- Cards Tab -->
            <div id="cards" class="tab-content">
                <div class="cards-grid">
                    <Card
                        width="full"
                        padding="lg"
                        shadow="md"
                        rounded="lg"
                        class="card-hover-scale">
                        <img
                            src={productImage}
                            alt="Card 1"
                            class="card-image"
                        />
                        <Heading level={4} size="md" margin="sm">
                            {lang === 'zh-cn' ? '悬停放大' : 'Hover Scale'}
                        </Heading>
                    </Card>
                    <Card
                        width="full"
                        padding="lg"
                        shadow="md"
                        rounded="lg"
                        class="card-hover-lift">
                        <img
                            src={productImage}
                            alt="Card 2"
                            class="card-image"
                        />
                        <Heading level={4} size="md" margin="sm">
                            {lang === 'zh-cn' ? '悬停上浮' : 'Hover Lift'}
                        </Heading>
                    </Card>
                    <Card
                        width="full"
                        padding="lg"
                        shadow="md"
                        rounded="lg"
                        class="card-hover-glow">
                        <img
                            src={productImage}
                            alt="Card 3"
                            class="card-image"
                        />
                        <Heading level={4} size="md" margin="sm">
                            {lang === 'zh-cn' ? '悬停发光' : 'Hover Glow'}
                        </Heading>
                    </Card>
                </div>
            </div>

            <!-- Alerts Tab -->
            <div id="alerts" class="tab-content">
                <Container flex="col" gap="md" padding="xl">
                    <Alert type="success" closable={false}>
                        {lang === 'zh-cn' ? '操作成功完成！' : 'Success!'}
                    </Alert>
                    <Alert type="info" closable={false}>
                        {
                            lang === 'zh-cn'
                                ? '这是一条提示信息'
                                : 'This is an info message'
                        }
                    </Alert>
                    <Alert type="warning" closable={false}>
                        {lang === 'zh-cn' ? '请注意检查' : 'Please check'}
                    </Alert>
                    <Alert type="error" closable={false}>
                        {lang === 'zh-cn' ? '发生错误' : 'Error occurred'}
                    </Alert>
                </Container>
            </div>

            <!-- Badges Tab -->
            <div id="badges" class="tab-content">
                <Container
                    flex="row"
                    gap="lg"
                    padding="xl"
                    contentCentered
                    class="badge-flex-wrap">
                    <Button variant="primary" size="lg">
                        {lang === 'zh-cn' ? '消息' : 'Messages'}
                        <Badge class="badge-margin">9+</Badge>
                    </Button>
                    <Button variant="secondary" size="lg">
                        {lang === 'zh-cn' ? '通知' : 'Notifications'}
                        <Badge class="badge-margin badge-accent">NEW</Badge>
                    </Button>
                    <Button variant="accent" size="lg">
                        {lang === 'zh-cn' ? '任务' : 'Tasks'}
                        <Badge class="badge-margin badge-success">5</Badge>
                    </Button>
                </Container>
            </div>
        </div>
    </Container>
</Container>

<style>
    /* Tab 导航 */
    .tab-nav-wrapper {
        display: flex;
        justify-content: center;
        margin-bottom: 2rem;
    }

    .tab-nav-container {
        display: inline-flex;
        background-color: rgba(var(--b2) / 1);
        border-radius: 9999px;
        padding: 0.25rem;
        gap: 0.25rem;
    }

    .interaction-tab {
        padding: 0.5rem 1.5rem;
        border-radius: 9999px;
        font-size: 0.875rem;
        font-weight: 500;
        transition: all 0.3s ease;
        cursor: pointer;
        border: none;
        background: transparent;
        color: rgba(var(--bc) / 0.6);
        position: relative;
    }

    .interaction-tab:hover:not(.active) {
        background-color: rgba(var(--bc) / 0.05);
        color: rgba(var(--bc) / 0.8);
    }

    .interaction-tab.active {
        background-color: rgb(var(--b1));
        color: rgb(var(--bc));
        font-weight: 600;
        box-shadow:
            0 2px 8px 0 rgb(0 0 0 / 0.1),
            0 1px 3px -1px rgb(0 0 0 / 0.1);
    }

    /* Tab 内容 */
    .tabs-content-wrapper {
        position: relative;
    }

    .tab-content {
        display: none;
    }

    .tab-content.active {
        display: block;
    }

    /* 按钮效果 */
    .button-flex-wrap {
        flex-wrap: wrap;
    }

    .btn-hover-lift {
        transition: all 0.3s ease;
    }

    .btn-hover-lift:hover {
        transform: translateY(-4px);
        box-shadow:
            0 20px 25px -5px rgb(0 0 0 / 0.1),
            0 8px 10px -6px rgb(0 0 0 / 0.1);
    }

    .btn-hover-scale {
        transition: all 0.3s ease;
    }

    .btn-hover-scale:hover {
        transform: scale(1.1);
    }

    .btn-hover-glow {
        transition: all 0.3s ease;
    }

    .btn-hover-glow:hover {
        box-shadow:
            0 25px 50px -12px rgb(0 0 0 / 0.25),
            0 0 20px rgba(var(--a) / 0.5);
    }

    /* 卡片网格 */
    .cards-grid {
        display: grid;
        grid-template-columns: 1fr;
        gap: 1.5rem;
        padding: 1.5rem;
    }

    @media (min-width: 768px) {
        .cards-grid {
            grid-template-columns: repeat(3, 1fr);
        }
    }

    .card-image {
        width: 100%;
        height: 10rem;
        object-fit: cover;
        border-radius: 0.5rem;
        margin-bottom: 1rem;
    }

    .card-hover-scale {
        transition: all 0.3s ease;
    }

    .card-hover-scale:hover {
        transform: scale(1.05);
        box-shadow:
            0 20px 25px -5px rgb(0 0 0 / 0.1),
            0 8px 10px -6px rgb(0 0 0 / 0.1);
    }

    .card-hover-lift {
        transition: all 0.3s ease;
    }

    .card-hover-lift:hover {
        transform: translateY(-8px);
        box-shadow: 0 25px 50px -12px rgb(0 0 0 / 0.25);
    }

    .card-hover-glow {
        transition: all 0.3s ease;
    }

    .card-hover-glow:hover {
        box-shadow:
            0 25px 50px -12px rgb(0 0 0 / 0.25),
            0 0 20px rgba(var(--p) / 0.2);
    }

    /* Badge */
    .badge-flex-wrap {
        flex-wrap: wrap;
    }

    .badge-margin {
        margin-left: 0.5rem;
    }

    .badge-accent {
        background-color: rgba(var(--a) / 1);
        color: rgba(var(--ac) / 1);
    }

    .badge-success {
        background-color: rgba(var(--su) / 1);
        color: rgba(var(--suc) / 1);
    }
</style>

<script>
    // Apple 风格的 Tab 切换
    function initTabs() {
        const tabs = document.querySelectorAll('.interaction-tab');
        const contents = document.querySelectorAll('.tab-content');

        // 设置初始状态
        if (tabs.length > 0) {
            tabs[0].classList.add('active');
        }
        if (contents.length > 0) {
            contents[0].classList.add('active');
        }

        tabs.forEach((tab) => {
            tab.addEventListener('click', () => {
                const targetId = tab.getAttribute('data-tab');

                // 更新 tab 样式
                tabs.forEach((t) => t.classList.remove('active'));
                tab.classList.add('active');

                // 切换内容 - 先淡出所有内容
                contents.forEach((content) => {
                    if (content.id !== targetId) {
                        (content as HTMLElement).style.opacity = '0';
                        setTimeout(() => {
                            content.classList.remove('active');
                        }, 300);
                    }
                });

                // 然后淡入目标内容
                const targetContent = document.getElementById(targetId || '');
                if (targetContent) {
                    (targetContent as HTMLElement).style.opacity = '0';
                    targetContent.classList.add('active');
                    setTimeout(() => {
                        (targetContent as HTMLElement).style.opacity = '1';
                    }, 10);
                }
            });
        });
    }

    // 初始化
    initTabs();

    // 监听页面导航（支持 Astro View Transitions）
    document.addEventListener('astro:page-load', initTabs);
</script>
