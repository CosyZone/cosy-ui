---
/**
 * @component Login
 *
 * @description
 * Login 组件用于创建灵活且功能丰富的登录页面。支持多种登录方式、自定义样式和布局。
 *
 * @usage
 * 基本用法：
 * ```astro
 * <Login title="欢迎回来" />
 * ```
 *
 * 自定义登录方式：
 * ```astro
 * <Login
 *   title="登录到系统"
 *   subtitle="使用以下方式登录"
 *   socialLogins={['github', 'google']}
 *   showRememberMe={true}
 *   showForgotPassword={true}
 * />
 * ```
 *
 * 完全自定义：
 * ```astro
 * <Login
 *   title="企业登录"
 *   subtitle="安全登录到企业系统"
 *   logo="/path/to/logo.png"
 *   socialLogins={['github', 'google', 'wechat']}
 *   showRememberMe={true}
 *   showForgotPassword={true}
 *   customClass="my-login-page"
 *   onLoginSuccess={() => {}}
 * >
 *   <div slot="footer">
 *     自定义页脚内容
 *   </div>
 * </Login>
 * ```
 *
 * @props
 * @prop {string} [title="登录"] - 登录页标题
 * @prop {string} [subtitle] - 登录页副标题
 * @prop {string} [logo] - 登录页Logo图片路径
 * @prop {('github'|'google'|'wechat')[]} [socialLogins] - 社交登录方式列表
 * @prop {boolean} [showRememberMe=false] - 是否显示"记住我"选项
 * @prop {boolean} [showForgotPassword=false] - 是否显示"忘记密码"链接
 * @prop {string} [customClass] - 自定义CSS类名
 * @prop {string} [loginButtonText="登录"] - 登录按钮文本
 * @prop {string} [usernameLabel="用户名"] - 用户名输入框标签
 * @prop {string} [passwordLabel="密码"] - 密码输入框标签
 * @prop {string} [forgotPasswordText="忘记密码？"] - 忘记密码链接文本
 * @prop {string} [rememberMeText="记住我"] - 记住我选项文本
 * @prop {string} [dividerText="或"] - 社交登录分隔符文本
 *
 * @slots
 * @slot header - 页头自定义内容
 * @slot footer - 页脚自定义内容
 * @slot socialButtons - 自定义社交登录按钮
 */

import { cn } from '../../src/class';
import { LoginFacade } from '../../src/components/login';
import ChartIcon from '../icons/ChartIcon.astro';
import GithubIcon from '../icons/GithubIcon.astro';

export interface Props {
    title?: string;
    subtitle?: string;
    logo?: string;
    socialLogins?: ('github' | 'google' | 'wechat')[];
    showRememberMe?: boolean;
    showForgotPassword?: boolean;
    customClass?: string;
    loginButtonText?: string;
    usernameLabel?: string;
    passwordLabel?: string;
    forgotPasswordText?: string;
    rememberMeText?: string;
    dividerText?: string;
}

const {
    title = '登录',
    subtitle,
    logo,
    socialLogins = [],
    showRememberMe = false,
    showForgotPassword = false,
    customClass = '',
    loginButtonText = '登录',
    usernameLabel = '用户名',
    passwordLabel = '密码',
    forgotPasswordText = '忘记密码？',
    rememberMeText = '记住我',
    dividerText = '或',
} = Astro.props;

// 使用共用代码获取类名
const classes = LoginFacade.getLoginClasses({
    title,
    subtitle,
    logo,
    socialLogins,
    showRememberMe,
    showForgotPassword,
    customClass,
    loginButtonText,
    usernameLabel,
    passwordLabel,
    forgotPasswordText,
    rememberMeText,
    dividerText,
});

// 社交登录图标映射
const socialIcons: Record<'github' | 'google' | 'wechat', any> = {
    github: GithubIcon,
    google: ChartIcon,
    wechat: ChartIcon,
};

// 获取社交登录按钮类名
const getSocialButtonClass = (provider: 'github' | 'google' | 'wechat') => {
    return LoginFacade.getSocialButtonClass(provider);
};
---

<div class={cn().add(classes.container).add(customClass).build()}>
    <div class={classes.card}>
        <!-- 头部区域 -->
        <div class={classes.header}>
            <slot name="header">
                {
                    logo && (
                        <img
                            class={classes.logo}
                            src={logo}
                            alt="Logo"
                        />
                    )
                }
                <h2 class={classes.title}>
                    {title}
                </h2>
                {
                    subtitle && (
                        <p class={classes.subtitle}>
                            {subtitle}
                        </p>
                    )
                }
            </slot>
        </div>

        <!-- 登录表单 -->
        <form class={classes.form}>
            <div class={classes.inputGroup}>
                <div>
                    <label for="username" class={cn().add('cosy:sr-only').build()}
                        >{usernameLabel}</label
                    >
                    <input
                        id="username"
                        name="username"
                        type="text"
                        required
                        class={classes.usernameInput}
                        placeholder={usernameLabel}
                    />
                </div>
                <div>
                    <label for="password" class={cn().add('cosy:sr-only').build()}
                        >{passwordLabel}</label
                    >
                    <input
                        id="password"
                        name="password"
                        type="password"
                        required
                        class={classes.passwordInput}
                        placeholder={passwordLabel}
                    />
                </div>
            </div>

            <div class={classes.options}>
                {
                    showRememberMe && (
                        <div class={classes.rememberMe}>
                            <input
                                id="remember-me"
                                name="remember-me"
                                type="checkbox"
                                class={classes.checkbox}
                            />
                            <label
                                for="remember-me"
                                class={classes.rememberMeLabel}>
                                {rememberMeText}
                            </label>
                        </div>
                    )
                }

                {
                    showForgotPassword && (
                        <div class={classes.forgotPassword}>
                            <a
                                href="#"
                                class={classes.forgotPasswordLink}>
                                {forgotPasswordText}
                            </a>
                        </div>
                    )
                }
            </div>

            <div>
                <button
                    type="submit"
                    class={classes.submitButton}>
                    {loginButtonText}
                </button>
            </div>
        </form>

        <!-- 社交登录 -->
        {
            socialLogins.length > 0 && (
                <div class={classes.socialSection}>
                    <div class={classes.divider}>
                        <div class={classes.dividerLine}>
                            <div class={classes.dividerBorder} />
                        </div>
                        <div class={classes.dividerTextContainer}>
                            <span class={classes.dividerText}>
                                {dividerText}
                            </span>
                        </div>
                    </div>

                    <slot name="socialButtons">
                        <div
                            class={cn()
                                .add(classes.socialButtons)
                                .add(`cosy:grid-cols-${Math.min(socialLogins.length, 3)}`)
                                .build()}>
                            {socialLogins.map((provider) => {
                                const Icon = socialIcons[provider];
                                return (
                                    <div>
                                        <a
                                            href="#"
                                            class={getSocialButtonClass(provider)}>
                                            <Icon class={cn().w(5).h(5).build()} />
                                        </a>
                                    </div>
                                );
                            })}
                        </div>
                    </slot>
                </div>
            )
        }

        <!-- 页脚 -->
        <slot name="footer" />
    </div>
</div>
