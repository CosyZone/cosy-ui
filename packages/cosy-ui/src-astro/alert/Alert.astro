---
/**
 * @component Alert
 *
 * @description
 * Alert 组件用于向用户显示重要的提示信息，支持多种类型的提示样式和交互效果。
 *
 * @usage
 * 基本用法：
 * ```astro
 * <Alert type="info">这是一条信息提示</Alert>
 * ```
 *
 * 带标题：
 * ```astro
 * <Alert type="success" title="操作成功">您的操作已成功完成</Alert>
 * ```
 *
 * 不显示图标：
 * ```astro
 * <Alert type="warning" showIcon={false}>不显示图标的警告</Alert>
 * ```
 *
 * 设置垂直外边距：
 * ```astro
 * <Alert type="info" marginY="md">带垂直外边距的提示</Alert>
 * ```
 *
 * 组合使用：
 * ```astro
 * <Alert
 *   type="error"
 *   title="提交失败"
 *   class="my-custom-class"
 *   marginY="lg"
 * >
 *   请检查表单并重新提交
 * </Alert>
 * ```
 *
 * 自定义操作按钮：
 * ```astro
 * <Alert type="info">
 *   这是带自定义操作的提示
 *   <slot name="action">
 *     <button>操作</button>
 *   </slot>
 * </Alert>
 * ```
 *
 * @props
 * @prop {string} [class] - 自定义 CSS 类名，用于覆盖默认样式
 * @prop {boolean} [closable=true] - 是否可关闭，设置为 false 时隐藏关闭按钮
 * @prop {string} [description] - 描述文本，显示在标题下方，字体较小且透明度降低
 * @prop {('xs'|'sm'|'md'|'lg'|'xl')} [marginY] - 垂直方向外边距大小，支持预设的尺寸值
 * @prop {boolean} [showIcon=true] - 是否显示图标，设置为 false 时隐藏类型对应的图标
 * @prop {string} [title] - 提示标题，可选，显示为粗体文本
 * @prop {('info'|'success'|'warning'|'error')} [type='info'] - 提示类型，影响颜色和图标，支持 info、success、warning、error 四种类型
 * @prop {('solid'|'outline'|'dash'|'soft')} [variant='solid'] - 样式变体，支持 solid（实心）、outline（描边）、dash（虚线）、soft（柔和）四种风格
 *
 * @slots
 * @slot default - 提示内容，主要文本内容
 * @slot action - 自定义操作按钮，显示在 alert 右侧，适合放置自定义按钮或其他操作
 */

import { cn } from '../../src/class';
import { AlertFacade } from '../../src/components/alert';
import type { IAlertProps } from './props';

const props = Astro.props as IAlertProps;

const {
    showIcon = true,
} = props;

// 渲染图标 HTML（如果需要）
const iconBtnClass = cn()
    .add('cosy:btn', 'cosy:btn-ghost', 'cosy:btn-circle', 'cosy:btn-sm')
    .build();

const iconHtml = showIcon
    ? (await Astro.slots.render('icon')) ||
      `<div class="${iconBtnClass}"><svg class="${cn().h(5).w(5).build()}" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke="currentColor"><path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z" /></svg></div>`
    : undefined;

// 渲染 slot 内容
const defaultSlotHtml = await Astro.slots.render('default');
const actionSlotHtml = await Astro.slots.render('action');

// 使用 Alert 门面渲染完整 HTML
const alertHtml = AlertFacade.render(props, {
    iconHtml,
    defaultSlotHtml,
    actionSlotHtml,
});

// 导出接口供外部使用
export type { IAlertProps };
---

<Fragment set:html={alertHtml} />
