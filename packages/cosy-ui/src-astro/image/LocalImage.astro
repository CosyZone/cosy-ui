---
/**
 * @component LocalImage
 *
 * @description
 * 专门处理本地图片的组件，基于 Astro Image 组件提供自动优化功能。
 * 适用于项目内的静态图片资源，支持 WebP、AVIF 等现代格式自动转换。
 *
 * @props
 * - alt: string - 图片的替代文本
 * - class?: string - 自定义 CSS 类名
 * - height?: number - 图片的高度
 * - hover?: 'none' | 'scale' | 'brightness' | 'blur' - 悬停效果
 * - objectFit?: 'contain' | 'cover' | 'fill' | 'none' | 'scale-down' - 填充方式
 * - objectPosition?: string - 图片位置
 * - rounded?: 'none' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' | '3xl' | 'full' - 圆角大小
 * - mask?: 'circle' | 'decagon' | 'diamond' | 'heart' | 'hexagon' | 'hexagon-2' | 'none' | 'pentagon' | 'square' | 'squircle' | 'star' | 'star-2' | 'triangle' | 'triangle-2' | 'triangle-3' | 'triangle-4' - 遮罩形状
 * - shadow?: 'none' | 'sm' | 'md' | 'lg' | 'xl' | '2xl' - 阴影效果
 * - src: ImageMetadata - 本地图片元数据
 * - tooltip?: string - 提示文本
 * - tooltipPlacement?: 'top' | 'bottom' | 'left' | 'right' - 提示框位置
 * - tooltipColor?: 'neutral' | 'primary' | 'secondary' | 'accent' | 'info' | 'success' | 'warning' | 'error' - 提示框颜色
 * - tooltipOpen?: boolean - 是否强制显示提示框
 * - transition?: 'none' | 'fade' | 'slide' | 'zoom' - 过渡动画
 * - width?: number - 图片的宽度
 */

import { Image as AstroImage } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import '../../style.ts';
import ImageTooltipWrapper from './TooltipWrapper.astro';
import {
  objectFitClasses,
  roundedClasses,
  maskClasses,
  shadowClasses,
  hoverClasses,
  transitionClasses,
  type ObjectFitType,
  type RoundedType,
  type MaskType,
  type ShadowType,
  type HoverType,
  type TransitionType,
} from './utils';

interface Props {
  /**
   * 图片的替代文本
   */
  alt: string;
  /**
   * 自定义类名
   */
  class?: string;
  /**
   * 图片的高度
   */
  height?: number;
  /**
   * 图片的悬停效果
   * @default "none"
   */
  hover?: HoverType;
  /**
   * 图片的填充方式
   * @default "cover"
   */
  objectFit?: ObjectFitType;
  /**
   * 图片的位置
   * @default "center"
   */
  objectPosition?: string;
  /**
   * 图片的圆角大小
   * @default "none"
   */
  rounded?: RoundedType;
  /**
   * 图片的遮罩形状
   * @default "none"
   */
  mask?: MaskType;
  /**
   * 图片的阴影效果
   * @default "none"
   */
  shadow?: ShadowType;
  /**
   * 本地图片元数据
   */
  src: ImageMetadata;
  /**
   * 图片的过渡动画
   * @default "none"
   */
  transition?: TransitionType;
  /**
   * 图片的提示文本
   */
  tooltip?: string;
  /**
   * 提示框的位置
   * @default "top"
   */
  tooltipPlacement?: 'top' | 'bottom' | 'left' | 'right';
  /**
   * 提示框的颜色主题
   * @default "neutral"
   */
  tooltipColor?:
    | 'neutral'
    | 'primary'
    | 'secondary'
    | 'accent'
    | 'info'
    | 'success'
    | 'warning'
    | 'error';
  /**
   * 是否强制显示提示框
   * @default false
   */
  tooltipOpen?: boolean;
  /**
   * 图片的宽度
   */
  width?: number;
}

const {
  src: imageSource,
  alt,
  width,
  height,
  objectFit = 'cover',
  objectPosition = 'center',
  class: className = '',
  rounded = 'none',
  mask = 'none',
  shadow = 'none',
  hover = 'none',
  transition = 'none',
  tooltip,
  tooltipPlacement = 'top',
  tooltipColor = 'neutral',
  tooltipOpen = false,
} = Astro.props;

// 构建图片类名
const imgClasses = [
  'cosy:object-center',
  objectFitClasses[objectFit] || objectFitClasses['cover'],
  roundedClasses[rounded],
  maskClasses[mask],
  shadowClasses[shadow],
  hoverClasses[hover],
  transitionClasses[transition],
  className,
]
  .filter(Boolean)
  .join(' ');
---

{
  tooltip ? (
    <ImageTooltipWrapper
      tooltip={tooltip}
      tooltipPlacement={tooltipPlacement}
      tooltipColor={tooltipColor}
      tooltipOpen={tooltipOpen}>
      <AstroImage
        src={imageSource}
        alt={alt}
        width={width}
        height={height}
        class={imgClasses}
        style={{ objectPosition }}
      />
    </ImageTooltipWrapper>
  ) : (
    <AstroImage
      src={imageSource}
      alt={alt}
      width={width}
      height={height}
      class={imgClasses}
      style={{ objectPosition }}
    />
  )
}
