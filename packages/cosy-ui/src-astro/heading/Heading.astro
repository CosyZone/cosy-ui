---





/**
 * @component Heading
 *
 * @description
 * Heading 组件用于创建各级标题，提供一致的排版样式和灵活的定制选项。
 * 支持链接功能，当传入 href 属性时，标题会变成可点击的链接。
 * 组件保持语义化结构：即使作为链接使用时，仍然渲染正确的 h1-h6 标签。
 *
 * @usage
 * 基本用法：
 * ```astro
 * <Heading level={1}>这是一个一级标题</Heading>
 * <Heading level={2}>这是一个二级标题</Heading>
 * <Heading level={3}>这是一个三级标题</Heading>
 * ```
 *
 * 链接标题：
 * ```astro
 * <Heading level={2} href="/about">关于我们</Heading>
 * <Heading level={3} href="https://example.com" external>外部链接标题</Heading>
 * ```
 *
 * 自定义样式：
 * ```astro
 * <Heading level={2} color="primary" underline>带下划线的二级标题</Heading>
 * ```
 *
 * 带锚点链接：
 * ```astro
 * <Heading level={2} id="section-1" anchor>带锚点的标题</Heading>
 * ```
 *
 * 自定义间距：
 * ```astro
 * <Heading level={1} class="cosy:mb-8">自定义底部间距的标题</Heading>
 * ```
 *
 * 外边距控制：
 * ```astro
 * <Heading level={2} margin="none">无外边距的标题</Heading>
 * <Heading level={2} margin="sm">小外边距的标题</Heading>
 * <Heading level={2} margin="lg">大外边距的标题</Heading>
 * <Heading level={2} margin="xl">超大外边距的标题</Heading>
 * ```
 *
 * 背景色支持：
 * ```astro
 * <Heading level={3} background="base-300" padding="sm">带背景色的标题</Heading>
 * <Heading level={3} background="primary" color="white">主要背景色标题</Heading>
 * <Heading level={3} background="primary/50" padding="sm">半透明背景色标题</Heading>
 * ```
 *
 * 字体粗细支持：
 * ```astro
 * <Heading level={2} weight="thin">细体标题</Heading>
 * <Heading level={2} weight="light">轻体标题</Heading>
 * <Heading level={2} weight="bold">粗体标题</Heading>
 * <Heading level={2} weight="black">超粗体标题</Heading>
 * ```
 *
 * @props
 * @prop {'left'|'center'|'right'} [align='left'] - 文本对齐方式
 * @prop {boolean} [anchor=false] - 是否显示锚点链接图标
 * @prop {BackgroundColor} [background] - 背景色类型，支持所有预设背景色和透明度变体
 * @prop {'default'|'primary'|'secondary'|'accent'|'muted'|'info'|'success'|'warning'|'error'|'base-content'|'neutral-content'} [color='default'] - 标题颜色
 * @prop {string} [class] - 自定义 CSS 类名
 * @prop {boolean} [external=false] - 是否为外部链接，影响链接的打开方式
 * @prop {string} [href] - 链接地址，传入后标题会变成可点击的链接
 * @prop {string} [id] - 标题的 ID，用于锚点链接
 * @prop {1|2|3|4|5|6} [level=2] - 标题级别，对应 h1-h6 标签
 * @prop {'none'|'sm'|'md'|'lg'|'xl'} [margin='md'] - 上下外边距大小
 * @prop {'none'|'sm'|'md'|'lg'|'xl'} [padding='none'] - 内边距大小（仅在设置背景色时生效）
 * @prop {boolean} [underline=false] - 是否显示下划线
 * @prop {'thin'|'light'|'normal'|'medium'|'semibold'|'bold'|'extrabold'|'black'} [weight] - 字体粗细，不指定时使用默认粗细
 *
 * @slots
 * @slot default - 标题内容
 *
 * @accessibility
 * - 使用语义化的 h1-h6 标签
 * - 锚点链接带有描述性 aria-label
 * - 遵循标题层次结构的最佳实践
 * - 链接标题保持良好的可访问性
 *
 * @dependencies
 * 依赖于以下组件：
 * - LinkIcon (用于锚点链接)
 * - Link (用于锚点链接)
 */

import { cn } from '../../src/class';
import Link from '../link/Link.astro';
import { getHeadingCombinedClassesAstro } from './class';
import HeadingAnchor from './HeadingAnchor.astro';
import type { IHeadingProps } from './props';

const props = Astro.props as IHeadingProps;

// 使用共用的工具函数计算组合类名
const combinedClass = getHeadingCombinedClassesAstro(props);

// 使用 class builder 构建链接类名
const linkClass = props.href
    ? cn().add('cosy:hover:opacity-80', 'cosy:transition-opacity').build()
    : '';
---

{
    props.level === 1 &&
        (props.href ? (
            <Link
                href={props.href}
                external={props.external}
                class={`${linkClass}`}
                noUnderline
                fullWidth>
                <h1 id={props.id} class={combinedClass}>
                    <slot />
                    <HeadingAnchor id={props.id} show={props.anchor} />
                </h1>
            </Link>
        ) : (
            <h1 id={props.id} class={combinedClass}>
                <slot />
                <HeadingAnchor id={props.id} show={props.anchor} />
            </h1>
        ))
}

{
    props.level === 2 &&
        (props.href ? (
            <Link
                href={props.href}
                external={props.external}
                class={`${linkClass}`}
                noUnderline
                fullWidth>
                <h2 id={props.id} class={combinedClass}>
                    <slot />
                    <HeadingAnchor id={props.id} show={props.anchor} />
                </h2>
            </Link>
        ) : (
            <h2 id={props.id} class={combinedClass}>
                <slot />
                <HeadingAnchor id={props.id} show={props.anchor} />
            </h2>
        ))
}

{
    props.level === 3 &&
        (props.href ? (
            <Link
                href={props.href}
                external={props.external}
                class={`${linkClass}`}
                noUnderline
                fullWidth>
                <h3 id={props.id} class={combinedClass}>
                    <slot />
                    <HeadingAnchor id={props.id} show={props.anchor} />
                </h3>
            </Link>
        ) : (
            <h3 id={props.id} class={combinedClass}>
                <slot />
                <HeadingAnchor id={props.id} show={props.anchor} />
            </h3>
        ))
}

{
    props.level === 4 &&
        (props.href ? (
            <Link
                href={props.href}
                external={props.external}
                class={`${linkClass}`}
                noUnderline
                fullWidth>
                <h4 id={props.id} class={combinedClass}>
                    <slot />
                    <HeadingAnchor id={props.id} show={props.anchor} />
                </h4>
            </Link>
        ) : (
            <h4 id={props.id} class={combinedClass}>
                <slot />
                <HeadingAnchor id={props.id} show={props.anchor} />
            </h4>
        ))
}

{
    props.level === 5 &&
        (props.href ? (
            <Link
                href={props.href}
                external={props.external}
                class={`${linkClass}`}
                noUnderline
                fullWidth>
                <h5 id={props.id} class={combinedClass}>
                    <slot />
                    <HeadingAnchor id={props.id} show={props.anchor} />
                </h5>
            </Link>
        ) : (
            <h5 id={props.id} class={combinedClass}>
                <slot />
                <HeadingAnchor id={props.id} show={props.anchor} />
            </h5>
        ))
}

{
    props.level === 6 &&
        (props.href ? (
            <Link
                href={props.href}
                external={props.external}
                class={`${linkClass}`}
                noUnderline
                fullWidth>
                <h6 id={props.id} class={combinedClass}>
                    <slot />
                    <HeadingAnchor id={props.id} show={props.anchor} />
                </h6>
            </Link>
        ) : (
            <h6 id={props.id} class={combinedClass}>
                <slot />
                <HeadingAnchor id={props.id} show={props.anchor} />
            </h6>
        ))
}

<style>
    .heading {
        line-height: 1.2;
        scroll-margin-top: 100px;
    }

    .heading-anchor {
        color: inherit;
        text-decoration: none;
        vertical-align: middle;
    }

    /* 悬停效果 */
    .heading:hover .heading-anchor {
        opacity: 0.7 !important;
    }

    .heading-anchor:hover {
        opacity: 1 !important;
    }
</style>
