---

/**
 * @component Stack
 *
 * @description
 * Stack 组件是一个垂直堆叠布局组件，用于垂直排列元素并控制它们之间的间距。
 * 它提供了灵活的间距控制、对齐方式和分隔线选项，使垂直布局更加简单。
 *
 * @design
 * 设计理念：
 * 1. 简化布局 - 提供简单直观的方式创建垂直堆叠布局
 * 2. 一致性 - 通过预设的间距选项确保布局一致性
 * 3. 灵活性 - 支持多种对齐方式和分隔线选项
 * 4. 可组合性 - 可以与其他布局组件组合使用
 *
 * @usage
 * 基本用法：
 * ```astro
 * <Stack>
 *   <div>第一个元素</div>
 *   <div>第二个元素</div>
 *   <div>第三个元素</div>
 * </Stack>
 * ```
 *
 * 自定义间距：
 * ```astro
 * <Stack gap="lg">
 *   <div>大间距</div>
 *   <div>垂直排列</div>
 * </Stack>
 * ```
 *
 * 带分隔线：
 * ```astro
 * <Stack dividers={true} dividerColor="primary">
 *   <div>带分隔线的堆叠</div>
 *   <div>使用主题色</div>
 * </Stack>
 * ```
 *
 * 自定义对齐：
 * ```astro
 * <Stack align="center">
 *   <div>居中对齐</div>
 *   <div>的元素</div>
 * </Stack>
 * ```
 */

import { cn } from '../../src/class';

// 定义间距类型
type GapSize = 'none' | 'xs' | 'sm' | 'md' | 'lg' | 'xl';

// 定义对齐方式类型
type AlignType = 'start' | 'center' | 'end' | 'stretch';

// 定义分隔线颜色类型
type DividerColor = 'gray' | 'light' | 'dark' | 'primary';

interface Props {
    /**
     * 元素间距
     * @default "md"
     */
    gap?: GapSize;

    /**
     * 是否显示分隔线
     * @default false
     */
    dividers?: boolean;

    /**
     * 分隔线颜色
     * @default "gray"
     */
    dividerColor?: DividerColor;

    /**
     * 对齐方式
     * @default "stretch"
     */
    align?: AlignType;

    /**
     * 自定义类名
     */
    class?: string;

    /**
     * 类名列表
     */
    'class:list'?: any;

    [key: string]: any;
}

const {
    gap = 'md',
    dividers = false,
    dividerColor = 'gray',
    align = 'stretch',
    class: className = '',
    'class:list': classList,
    ...rest
} = Astro.props;

// 间距映射
const gapClasses: Record<GapSize, string> = {
    none: 'stack-gap-none',
    xs: 'stack-gap-xs',
    sm: 'stack-gap-sm',
    md: 'stack-gap-md',
    lg: 'stack-gap-lg',
    xl: 'stack-gap-xl',
};

// 对齐方式映射
const alignClasses: Record<AlignType, string> = {
    start: 'stack-align-start',
    center: 'stack-align-center',
    end: 'stack-align-end',
    stretch: 'stack-align-stretch',
};

// 分隔线颜色映射
const dividerColorClasses: Record<DividerColor, string> = {
    gray: 'stack-divider-gray',
    light: 'stack-divider-light',
    dark: 'stack-divider-dark',
    primary: 'stack-divider-primary',
};

// 使用 classBuilder 构建最终类名
const stackClass = cn()
    .add('stack')
    .add(alignClasses[align as AlignType])
    .add(gapClasses[gap as GapSize])
    .add(
        dividers
            ? `stack-divider ${dividerColorClasses[dividerColor as DividerColor]}`
            : ''
    )
    .add(className)
    .build();
---

<div class={stackClass} {...rest}>
    <slot />
</div>
