---
/**
 * @component Reviews
 *
 * @description
 * Reviews 组件用于展示多个用户评价，支持网格布局、评分统计和筛选功能。
 * 适用于产品评价页面、服务评价展示等场景。
 *
 * @design
 * 设计理念：
 * 1. 批量展示 - 高效展示多个评价，支持分页和筛选
 * 2. 统计信息 - 显示总体评分和评价分布
 * 3. 灵活布局 - 支持网格和列表两种布局模式
 * 4. 用户友好 - 提供排序和筛选功能
 *
 * @usage
 * 基本用法：
 * ```astro
 * <Reviews
 *   reviews={reviewsData}
 *   title="用户评价"
 *   showStats={true}
 * />
 * ```
 *
 * 网格布局：
 * ```astro
 * <Reviews
 *   reviews={reviewsData}
 *   layout="grid"
 *   columns={{ base: 1, md: 2, lg: 3 }}
 * />
 * ```
 *
 * 自定义样式：
 * ```astro
 * <Reviews
 *   reviews={reviewsData}
 *   class="cosy:bg-base-200 cosy:p-6"
 * />
 * ```
 *
 * @props
 * @prop {ReviewData[]} reviews - 评价数据数组
 * @prop {string} [title] - 标题
 * @prop {boolean} [showStats] - 是否显示统计信息
 * @prop {'grid' | 'list'} [layout] - 布局模式
 * @prop {Object} [columns] - 网格列数配置
 * @prop {number} [maxReviews] - 最大显示评价数
 * @prop {string} [class] - 自定义类名
 * @prop {any} [class:list] - 类名列表
 */

// 导入样式
import "../../style.ts";
import { cn } from "../../src/class";

import Text from "../text/Text.astro";
import Heading from "../heading/Heading.astro";
import Grid from "../grid/Grid.astro";
import SmartIcon from "../smart-icon/SmartIcon.astro";
import type { IReviewsProps, IReviewData } from "./props";
import Review from "./Review.astro";

const {
	reviews,
	title,
	showStats = false,
	layout = "grid",
	columns = { base: 1, md: 2, lg: 3 },
	maxReviews,
	class: className = "",
	"class:list": classList,
	...rest
} = Astro.props as IReviewsProps;

// 计算统计信息
const stats = showStats
	? {
			averageRating:
				reviews.reduce((sum, review) => sum + review.rating, 0) /
				reviews.length,
			totalReviews: reviews.length,
			ratingDistribution: Array.from(
				{ length: 5 },
				(_, i) =>
					reviews.filter((review) => Math.floor(review.rating) === i + 1)
						.length,
			),
		}
	: null;

// 限制显示的评价数量
const displayReviews = maxReviews ? reviews.slice(0, maxReviews) : reviews;

// 生成星级评分
const generateStars = (rating: number) => {
	return Array.from({ length: 5 }, (_, i) => ({
		filled: i < Math.floor(rating),
		half: i === Math.floor(rating) && rating % 1 !== 0,
	}));
};

// 使用 classBuilder 构建容器类名
const containerClass = cn()
	.add('cosy:reviews-container')
	.add(className)
	.build();
---

<div class={containerClass} {...rest}>
  <!-- 标题和统计信息 -->
  {(title || showStats) && (
    <div class="cosy:mb-6">
      {title && (
        <Heading level={2} class="cosy:mb-4 cosy:font-semibold">
          {title}
        </Heading>
      )}
      
      {showStats && stats && (
        <div class="cosy:flex cosy:items-center cosy:gap-6 cosy:mb-4">
          <!-- 总体评分 -->
          <div class="cosy:flex cosy:items-center cosy:gap-2">
            <Text size="3xl" class="cosy:font-bold cosy:text-primary">
              {stats.averageRating.toFixed(1)}
            </Text>
            <div class="cosy:flex cosy:items-center cosy:gap-1">
              {generateStars(stats.averageRating).map((star, index) => (
                <SmartIcon
                  keyword={star.filled ? 'star' : star.half ? 'star' : 'star'}
                  size="20px"
                  class={star.filled || star.half ? 'cosy:text-warning' : 'cosy:text-base-300'}
                />
              ))}
            </div>
            <Text class="cosy:text-base-content/60">
              ({stats.totalReviews} 评价)
            </Text>
          </div>
        </div>
      )}
    </div>
  )}

  <!-- 评价列表 -->
  {layout === 'grid' ? (
    <Grid cols={columns} gap="lg">
      {displayReviews.map((review) => (
        <Review
          userName={review.userName}
          rating={review.rating}
          comment={review.comment}
          date={review.date}
          verified={review.verified}
          avatar={review.avatar}
        />
      ))}
    </Grid>
  ) : (
    <div class="cosy:space-y-4">
      {displayReviews.map((review) => (
        <Review
          userName={review.userName}
          rating={review.rating}
          comment={review.comment}
          date={review.date}
          verified={review.verified}
          avatar={review.avatar}
        />
      ))}
    </div>
  )}
</div>
