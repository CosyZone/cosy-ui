---
/**
 * @component Avatar
 *
 * @description
 * Avatar 组件用于显示用户头像，支持真实头像和默认头像生成。
 * 当没有提供头像URL或头像加载失败时，自动生成带用户首字母的彩色圆形头像。
 *
 * @usage
 * 基本用法：
 * ```astro
 * <Avatar userName="张先生" />
 * ```
 *
 * 带真实头像：
 * ```astro
 * <Avatar userName="李女士" avatar="https://example.com/avatar.jpg" />
 * ```
 *
 * 不同尺寸：
 * ```astro
 * <Avatar userName="王先生" size="lg" />
 * ```
 *
 * 自定义样式：
 * ```astro
 * <Avatar userName="赵先生" class="cosy:border-2 cosy:border-primary" />
 * ```
 *
 * @props
 * @prop {string} [userName] - 用户名称
 * @prop {string} [avatar] - 用户头像URL
 * @prop {'sm'|'md'|'lg'|'xl'} [size='md'] - 头像尺寸
 * @prop {string} [class] - 自定义类名
 * @prop {any} [class:list] - 类名列表
 */

import { cn } from '../../src/class';
import {
	getAvatarColor,
	getAvatarInitial,
	getAvatarSizeClass,
} from '../../src/components/avatar/avatarUtils';
import type { AvatarProps } from './types';

type Props = AvatarProps;

const {
    userName,
    avatar,
    size = 'md',
    class: className = '',
    'class:list': classList,
    ...rest
} = Astro.props;

const sizeClass = getAvatarSizeClass(size as 'sm' | 'md' | 'lg' | 'xl');

// 使用 classBuilder 构建各个部分的类名
const avatarContainerClass = cn()
    .add('cosy:avatar') // 保留：DaisyUI 组件类名
    .rounded('full')
    .overflowHidden()
    .shrink0()
    .bg('base-200')
    .flex('row')
    .items('center')
    .justify('center')
    .add(sizeClass, className) // 保留：动态类名
    .build();

const avatarImageClass = cn()
    .w('full')
    .h('full')
    .objectCover()
    .build();

const avatarFallbackClass = cn()
    .w('full')
    .h('full')
    .add(getAvatarColor(userName)) // 保留：动态颜色函数
    .color('white')
    .semibold()
    .flex('row')
    .items('center')
    .justify('center')
    .build();
---

<div class={avatarContainerClass} {...rest}>
    {
        avatar ? (
            <img
                src={avatar}
                alt={userName}
                class={avatarImageClass}
                onerror="this.style.display='none'; this.nextElementSibling.style.display='flex';"
            />
        ) : null
    }
    <!-- 默认头像 -->
    <div
        class={avatarFallbackClass}
        style={avatar ? 'display: none;' : 'display: flex;'}>
        {getAvatarInitial(userName)}
    </div>
</div>
