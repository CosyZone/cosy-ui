---



import { cn } from '../../src/class';
import type { ICarouselProps } from './types';

export interface Props extends ICarouselProps {}

const {
    items = [],
    idPrefix = 'carousel',
    navButtonClass = 'btn btn-circle',
    showNav = true,
    id,
    class: className,
    'class:list': classList,
    ...rest
} = Astro.props as Props;

const slides = items.map((item, index) => ({
    id: item.id ?? `${idPrefix}-slide-${index + 1}`,
    src: item.src,
    alt: item.alt ?? '',
}));

function getPrevIndex(current: number, total: number) {
    return (current - 1 + total) % total;
}

function getNextIndex(current: number, total: number) {
    return (current + 1) % total;
}

// 使用 class builder 构建类名
const carouselClass = cn()
    .add('carousel', 'cosy:w-full')
    .add(className || '')
    .build();

const carouselItemClass = cn()
    .add('carousel-item', 'cosy:relative', 'cosy:w-full')
    .build();

const imageClass = cn().add('cosy:w-full').build();

const navContainerClass = cn()
    .absolute()
    .add('cosy:left-5', 'cosy:right-5', 'cosy:top-1/2')
    .flex()
    .add('cosy:-translate-y-1/2', 'cosy:transform')
    .justify('between')
    .build();
---

<div id={id} class={carouselClass} {...rest}>
    {
        slides.map((slide, idx) => (
            <div id={slide.id} class={carouselItemClass}>
                <img src={slide.src} alt={slide.alt} class={imageClass} />
                {showNav && (
                    <div class={navContainerClass}>
                        <a
                            href={`#${slides[getPrevIndex(idx, slides.length)].id}`}
                            class={navButtonClass}>
                            ❮
                        </a>
                        <a
                            href={`#${slides[getNextIndex(idx, slides.length)].id}`}
                            class={navButtonClass}>
                            ❯
                        </a>
                    </div>
                )}
            </div>
        ))
    }
    <slot />
</div>
