---

/**
 * @component MainError
 *
 * @description
 * Main 组件通用错误提示组件
 * 用于显示各种类型的错误信息，包括属性冲突、配置错误等
 */

import ErrorIcon from "../icons/ErrorIcon.astro";
import InfoIcon from "../icons/InfoIcon.astro";
import WarningIcon from "../icons/WarningIcon.astro";

export interface ErrorInfo {
	/** 错误标题 */
	title: string;
	/** 错误描述 */
	message: string;
	/** 解决方案列表 */
	solutions: string[];
	/** 错误类型 */
	type?: "conflict" | "invalid" | "warning" | "error";
}

export interface Props {
	/**
	 * 是否显示错误提示
	 * @default false
	 */
	show?: boolean;

	/**
	 * 错误信息
	 */
	error?: ErrorInfo;
}

const { show = false, error } = Astro.props;

// 根据错误类型选择样式
const getAlertClass = (type?: string) => {
	switch (type) {
		case "warning":
			return "cosy:alert-warning";
		case "error":
			return "cosy:alert-error";
		case "invalid":
			return "cosy:alert-info";
		default:
			return "cosy:alert-error";
	}
};

// 根据错误类型选择图标组件
const getIconComponent = (type?: string) => {
	switch (type) {
		case "warning":
			return WarningIcon;
		case "error":
			return ErrorIcon;
		case "invalid":
			return InfoIcon;
		default:
			return ErrorIcon;
	}
};
---

{
  show && error && (
    <div class={`cosy:alert ${getAlertClass(error.type)} cosy:mb-4`}>
      <div class="cosy:shrink-0">
        {(() => {
          const IconComponent = getIconComponent(error.type);
          return <IconComponent size="24px" class="cosy:stroke-current" />;
        })()}
      </div>
      <div>
        <h3 class="cosy:font-bold">{error.title}</h3>
        <div class="cosy:text-xs">
          {error.message}
          {error.solutions.length > 0 && (
            <>
              <br />
              解决方案：
              <ul class="cosy:mt-2 cosy:list-disc cosy:list-inside">
                {error.solutions.map((solution) => (
                  <li>{solution}</li>
                ))}
              </ul>
            </>
          )}
        </div>
      </div>
    </div>
  )
}
