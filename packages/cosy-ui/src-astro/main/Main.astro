---
/**
 * @component Main
 *
 * @description
 * Main 组件是页面的主要内容区域，使用 Container 组件提供响应式布局。
 * 它适合作为页面的主体部分，自动处理不同屏幕尺寸下的布局和内边距。
 *
 * @design
 * 设计理念：
 * 1. 结构清晰 - 明确表示页面的主要内容区域，提高语义化
 * 2. 响应式布局 - 在不同屏幕尺寸下自动调整内边距和宽度
 * 3. 灵活配置 - 支持自定义容器尺寸、内边距和背景颜色
 * 4. 与容器集成 - 无缝集成 Container 组件，保持布局一致性
 *
 * @usage
 * 基本用法：
 * ```astro
 * ---
 * import { Main } from '@coffic/cosy-ui';
 * ---
 *
 * <Main>
 *   <h1>页面标题</h1>
 *   <p>页面内容</p>
 * </Main>
 * ```
 *
 * 自定义容器尺寸：
 * ```astro
 * <Main size="lg">
 *   <p>这是一个较宽的主内容区域</p>
 * </Main>
 * ```
 *
 * 自定义内边距：
 * ```astro
 * <Main verticalPadding="lg" padding="xl">
 *   <p>这个主内容区域有更大的内边距</p>
 * </Main>
 * ```
 *
 * 自定义背景颜色：
 * ```astro
 * <Main backgroundColor="primary">
 *   <p>这个主内容区域有主题色背景</p>
 * </Main>
 * ```
 */
import '../../style.ts';
import {
  getBackgroundClass,
  type BackgroundColor,
} from '../../src/common/backgrounds';
import {
  Article,
  TableOfContents,
  type IMainContentProps,
} from '../../index-astro';

export interface Props extends IMainContentProps {}

const {
  size = 'md',
  padding = 'md',
  verticalPadding = 'md',
  centered = true,
  backgroundColor,
  layout = 'row',
  isArticle = false,
  id,
  showTableOfContents = false,
  class: className,
  'class:list': classList,
  currentLocale,
  ...rest
} = Astro.props;

// 新增获取布局类的函数
function getLayoutClasses(layout: string) {
  if (layout === 'row') return 'cosy:flex cosy:flex-row';
  if (layout === 'column') return 'cosy:flex cosy:flex-col';
  return 'cosy:flex cosy:flex-col'; // 默认列布局
}

const layoutClass = getLayoutClasses(layout as string);

// 获取垂直内边距的Tailwind类
function getVerticalPaddingClasses(padding: string) {
  if (padding === 'none') return 'cosy:py-0';
  if (padding === 'xs') return 'cosy:py-1';
  if (padding === 'sm') return 'cosy:py-2';
  if (padding === 'md') return 'cosy:py-4';
  if (padding === 'lg') return 'cosy:py-6';
  if (padding === 'xl') return 'cosy:py-8';
  if (padding === '2xl') return 'cosy:py-10';
  if (padding === '3xl') return 'cosy:py-12';
  if (padding === '4xl') return 'cosy:py-16';
  if (padding === '5xl') return 'cosy:py-20';
  return ''; // 对于自定义padding，使用内联样式
}

// 使用通用背景色函数

const verticalPaddingClass = getVerticalPaddingClasses(
  verticalPadding as string
);
const bgColorClass = getBackgroundClass(backgroundColor as BackgroundColor);

// 构建自定义样式
const customStyle = [];

// 只有当没有对应的Tailwind类时，才使用内联样式
if (!verticalPaddingClass && verticalPadding && verticalPadding !== 'none') {
  customStyle.push(
    `padding-top: ${verticalPadding}; padding-bottom: ${verticalPadding};`
  );
}

if (!bgColorClass && backgroundColor) {
  customStyle.push(`background-color: ${backgroundColor};`);
}

const inlineStyle = customStyle.length > 0 ? customStyle.join(' ') : undefined;
---

<main
  id={id}
  class:list={[
    'cosy:w-full',
    layoutClass,
    verticalPaddingClass,
    bgColorClass,
    className,
    classList,
  ]}
  style={inlineStyle}
  {...rest}>
  {
    isArticle ? (
      <Article>
        <slot />
      </Article>
    ) : (
      <slot />
    )
  }

  {showTableOfContents && <TableOfContents lang={currentLocale} />}
</main>
