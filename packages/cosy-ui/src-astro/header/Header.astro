---
/**
 * @component Header
 *
 * @description
 * Header 组件是一个用于网站顶部导航的布局组件，提供了logo、导航菜单、语言切换等功能。
 * 组件支持响应式设计，在不同屏幕尺寸下有良好的显示效果，并可选择固定在页面顶部。
 *
 * @design
 * 设计理念：
 * 1. 简洁实用 - 提供清晰的导航和品牌展示，不过度占用视觉空间
 * 2. 响应式适配 - 在移动端和桌面端都有合适的展现形式
 * 3. 可定制性 - 支持多种配置选项，适应不同网站的风格和需求
 * 4. 多语言支持 - 内置语言切换功能，便于构建国际化网站
 *
 * @usage
 * 基本用法：
 * ```astro
 * <Header />
 * ```
 *
 * 启用语言切换功能：
 * ```astro
 * ---
 * import * as astroI18n from 'astro:i18n';
 * ---
 * <Header astroI18n={astroI18n} />
 * ```
 *
 * 自定义导航项间距：
 * ```astro
 * <Header gap={4} />
 * ```
 *
 * @props
 * - astroI18n - 完整的 astro:i18n 模块（启用语言切换时需要）
 * - shadow - Header 阴影强度，可选值：none, sm, md, lg, xl, 2xl，默认 md
 * - gap - 导航项之间的间距，可选值：0, 1, 2, 3, 4, 6, 8, 10, 12，默认 2
 */
import {
	LinkUtil,
	type IHeaderProps,
	type INavItem,
	Modal,
} from "../../index-astro";
import { heightClasses, type HeightSize } from "../../src/common/height";
import {
	paddingXClasses,
	paddingYClasses,
} from "../../src/common/padding-axis";
import { roundedClasses, type RoundedSize } from "../../src/common/rounded";
import { shadowClasses, type ShadowSize } from "../../src/common/shadow";
import { textColorClasses, type TextColor } from "../../src/common/textColors";
import {
	getBackgroundClass,
	type BackgroundColor,
} from "../../src/common/backgrounds";
import Logo from "../../src/assets/cosy-logo.png";
import HeaderStart from "./HeaderStart.astro";
import HeaderCenter from "./HeaderCenter.astro";
import HeaderEnd from "./HeaderEnd.astro";
import MobileNav from "./MobileNav.astro";

export interface Props extends IHeaderProps {}

const {
	height = "3xs",
	logo = Logo,
	logoHref = LinkUtil.getBaseUrl(),
	navItems = [],
	sticky = true,
	background = "base-300/90",
	shadow = "md",
	rounded = "none",
	textColor = "base-content",
	paddingHorizontal = "none",
	paddingVertical = "none",
	navPosition = "center",
	showThemeSwitcher = true,
	gap = 2,
	astroI18n,
} = Astro.props;

// 根据高度设置样式（使用 common 中的 heightClasses）
const headerHeightClass = heightClasses[height as unknown as HeightSize] || "";
const linkHeightClasses = {
	none: "cosy:py-0",
	xs: "cosy:py-0",
	sm: "cosy:py-1",
	md: "cosy:py-1",
	lg: "cosy:py-2",
	xl: "cosy:py-3",
	"2xl": "cosy:py-4",
	"3xl": "cosy:py-5",
	"4xl": "cosy:py-6",
	"5xl": "cosy:py-8",
	"6xl": "cosy:py-10",
	full: "cosy:py-1",
	screen: "cosy:py-1",
	auto: "cosy:py-1",
};

const linkHeightClass =
	linkHeightClasses[height as keyof typeof linkHeightClasses];

// 检查 i18n 是否启用，通过 Astro.currentLocale 来判断
let isI18nEnabled = Astro.currentLocale !== undefined;

const currentPath = Astro.url.pathname;
const activeLink = LinkUtil.getActiveLink(
	currentPath,
	navItems.map((item: INavItem) => item.href),
);

// 计算 header 外层与内部容器类名
const backgroundClass = getBackgroundClass(background as BackgroundColor);
const headerPaddingX = paddingHorizontal
	? paddingXClasses[paddingHorizontal as keyof typeof paddingXClasses]
	: "";
const headerPaddingY = paddingVertical
	? paddingYClasses[paddingVertical as keyof typeof paddingYClasses]
	: "";

const headerClassList = [
	"cosy:w-full cosy:z-50",
	sticky ? "cosy:fixed cosy:top-0" : "",
	headerPaddingX,
	headerPaddingY,
]
	.filter(Boolean)
	.join(" ");

const containerClassList = [
	"cosy:px-4 cosy:flex cosy:flex-grow cosy:backdrop-blur not-prose",
	backgroundClass,
	rounded ? roundedClasses[rounded as RoundedSize] : "",
	headerHeightClass,
	shadowClasses[shadow as ShadowSize],
	textColorClasses[textColor as TextColor] || "",
]
	.filter(Boolean)
	.join(" ");
---

<header class={headerClassList}>
  <div class={containerClassList}>
    <HeaderStart
      logo={logo}
      logoHref={logoHref}
      navPosition={navPosition}
      navItems={navItems}
      activeLink={activeLink}
      linkHeightClass={linkHeightClass}>
      <slot name="navbar-start" />
    </HeaderStart>

    <HeaderCenter
      navPosition={navPosition}
      navItems={navItems}
      activeLink={activeLink}
      linkHeightClass={linkHeightClass}
      gap={gap}>
      <slot name="navbar-center" />
    </HeaderCenter>

    <HeaderEnd
      navPosition={navPosition}
      navItems={navItems}
      activeLink={activeLink}
      linkHeightClass={linkHeightClass}
      showThemeSwitcher={showThemeSwitcher}
      isI18nEnabled={isI18nEnabled}
      astroI18n={astroI18n}>
      <slot name="navbar-end" />
    </HeaderEnd>
  </div>
</header>

<!-- 移动端导航 Modal -->
{
  navItems.length > 0 && (
    <Modal id="mobile-nav" title="导航菜单">
      <MobileNav
        navItems={navItems}
        activeLink={activeLink}
        linkHeightClass={linkHeightClass}
      />
    </Modal>
  )
}
