---
/**
 * @component Link
 *
 * @description
 * Link 组件是一个增强的链接组件，提供了丰富的样式变体和动画效果。
 * 它可以用于导航、按钮、行动号召等多种场景。
 *
 * @design
 * 设计理念：
 * 1. 灵活多变 - 提供多种样式变体，适应不同场景
 * 2. 视觉反馈 - 通过悬停效果提供用户交互反馈
 * 3. 一致性 - 保持与整体设计系统的一致性
 * 4. 可访问性 - 确保链接可被键盘导航和屏幕阅读器识别
 *
 * @usage
 * 基本用法：
 * ```astro
 * <Link href="/about">关于我们</Link>
 * ```
 *
 * 外部链接：
 * ```astro
 * <Link href="https://example.com" external>访问外部网站</Link>
 * ```
 *
 * 样式变体：
 * ```astro
 * <Link href="/signup" variant="primary">注册</Link>
 * <Link href="/learn-more" variant="secondary">了解更多</Link>
 * <Link href="/docs" variant="text">查看文档</Link>
 * <Link href="/get-started" variant="cta">立即开始</Link>
 * <Link href="/preview" variant="ghost">预览</Link>
 * <Link href="/previous" variant="navigation" navigationType="previous">上一页</Link>
 * <Link href="/next" variant="navigation" navigationType="next">下一页</Link>
 * <Link href="https://github.com/user/repo" variant="github">GitHub 仓库</Link>
 * ```
 *
 * 块级显示：
 * ```astro
 * <Link href="/contact" block>独占一行的链接</Link>
 * <p>这是一段文字，其中包含一个<Link href="/inline">内联链接</Link>。</p>
 * ```
 *
 * 动画效果：
 * ```astro
 * <Link href="/contact" animation="hover-lift">联系我们</Link>
 * <Link href="/features" animation="hover-glow">功能特性</Link>
 * <Link href="/pricing" animation="hover-scale">查看价格</Link>
 * ```
 *
 * 尺寸变体：
 * ```astro
 * <Link href="/small" size="sm">小型链接</Link>
 * <Link href="/medium" size="md">中型链接</Link>
 * <Link href="/large" size="lg">大型链接</Link>
 * ```
 */

import '../../style.ts';
import { ChevronLeftIcon, ChevronRightIcon, GithubIcon } from '../icons';

import type { HTMLAttributes } from 'astro/types';

// 定义链接尺寸类型
type LinkSize = 'sm' | 'md' | 'lg';

// 定义链接变体类型
type LinkVariant =
  | 'default'
  | 'primary'
  | 'secondary'
  | 'text'
  | 'cta'
  | 'ghost'
  | 'light'
  | 'navigation'
  | 'github';

// 定义链接动画类型
type LinkAnimation = 'none' | 'hover-lift' | 'hover-glow' | 'hover-scale';

interface Props extends HTMLAttributes<'a'> {
  href: string;
  external?: boolean;
  block?: boolean;
  class?: string;
  'class:list'?: any;
  variant?: LinkVariant;
  animation?: LinkAnimation;
  size?: LinkSize;
  debug?: boolean;
  centerText?: boolean;
  btn?: boolean;
  circle?: boolean;
  ghost?: boolean;
  noUnderline?: boolean;
  rounded?: boolean;
  fullWidth?: boolean;
  color?:
    | 'primary'
    | 'secondary'
    | 'accent'
    | 'info'
    | 'success'
    | 'warning'
    | 'error';
  align?: 'left' | 'center' | 'right';
  active?: boolean;
  navigationType?: 'previous' | 'next';
}

const {
  href,
  external = false,
  block = false,
  variant = 'default',
  animation = 'none',
  size = 'md',
  class: className = '',
  'class:list': classList,
  debug = false,
  centerText = false,
  btn = false,
  circle = false,
  ghost = false,
  noUnderline = true,
  rounded = false,
  fullWidth = false,
  color,
  align,
  active = false,
  navigationType,
  ...rest
} = Astro.props;

// 构建类名
const classes = [
  // 基础链接样式
  'cosy:items-center cosy:cursor-pointer cosy:transition-all cosy:duration-200',

  // 显示方式
  block ? 'cosy:flex cosy:w-full' : 'cosy:inline-flex',

  // 变体样式
  variant === 'primary' && 'cosy:text-primary cosy:hover:text-primary-focus',
  variant === 'secondary' &&
    'cosy:text-secondary cosy:hover:text-secondary-focus',
  variant === 'text',
  variant === 'cta' &&
    'cosy:text-accent cosy:hover:text-accent-focus cosy:font-medium',
  variant === 'ghost' &&
    'cosy:text-base-content cosy:hover:text-base-content/80',
  variant === 'default' &&
    'cosy:text-base-content cosy:hover:text-base-content/90',
  variant === 'light' &&
    'cosy:text-white cosy:hover:text-white/90 cosy:font-medium',
  variant === 'navigation' &&
    'cosy:flex cosy:items-center cosy:gap-3 cosy:p-4 cosy:bg-base-100 cosy:border cosy:border-base-300 cosy:rounded-lg cosy:shadow-sm cosy:hover:shadow-md cosy:hover:border-base-400 cosy:transition-all cosy:duration-300 cosy:ease-in-out cosy:no-underline cosy:hover:no-underline cosy:font-medium cosy:text-base-content cosy:hover:text-base-content cosy:hover:-translate-y-1 cosy:hover:scale-[1.01] cosy:backdrop-blur-sm cosy:hover:backdrop-blur-md',
  variant === 'github' &&
    'cosy:flex cosy:items-center cosy:gap-2 cosy:text-base-content cosy:hover:text-base-content/80 cosy:transition-colors cosy:duration-200 cosy:no-underline cosy:hover:no-underline cosy:font-medium',

  // 尺寸样式
  size === 'sm' && 'cosy:text-sm',
  size === 'md' && 'cosy:text-base',
  size === 'lg' && 'cosy:text-lg',

  // 动画效果
  animation === 'hover-lift' &&
    'cosy:hover:-translate-y-0.5 cosy:transition-transform',
  animation === 'hover-glow' &&
    'cosy:hover:brightness-125 cosy:transition-[filter]',
  animation === 'hover-scale' &&
    'cosy:hover:scale-105 cosy:transition-transform',

  // Active state
  active && 'cosy:active',

  // 按钮风格
  btn && 'cosy:btn',
  btn && size === 'sm' && 'cosy:btn-sm',
  btn && size === 'lg' && 'cosy:btn-lg',
  btn && ghost && 'cosy:btn-ghost',
  btn && color && `cosy:btn-${color}`,
  btn && fullWidth && 'cosy:btn-block',
  btn && circle && 'cosy:btn-circle',
  btn && rounded && 'cosy:rounded-full',

  // 非按钮风格下的圆角
  !btn && rounded && 'cosy:rounded',

  // 非按钮风格下的无下划线
  !btn && noUnderline && 'cosy:no-underline cosy:hover:no-underline',

  // 宽度100%
  fullWidth && !btn && 'cosy:w-full',

  // 对齐
  align === 'center' && 'cosy:justify-center cosy:text-center',
  align === 'right' && 'cosy:justify-end cosy:text-right',
  align === 'left' && 'cosy:justify-start cosy:text-left',

  // 自定义类名
  className,
];

// 文本居中样式（兼容旧用法）
if (centerText) {
  classes.push('cosy:justify-center cosy:text-center');
}

// 调试样式
if (debug) {
  classes.push('cosy:border cosy:border-dashed cosy:border-red-500');
}
---

<a
  href={href}
  class:list={[classes, classList]}
  {...external ? { target: '_blank', rel: 'noopener noreferrer' } : {}}
  {...rest}>
  {navigationType === 'previous' && <ChevronLeftIcon />}
  {variant === 'github' && <GithubIcon />}
  <slot />
  {navigationType === 'next' && <ChevronRightIcon />}
</a>
