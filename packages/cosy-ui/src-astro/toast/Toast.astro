---





/**
 * @component Toast
 *
 * @description
 * Toast 组件用于显示临时的通知消息，支持多种类型和自动消失功能。
 * 通常不直接使用，而是通过全局的 toast 系统来显示。
 *
 * @design
 * 设计理念：
 * 1. 非侵入式 - 不阻断用户操作，自动消失
 * 2. 视觉层次 - 通过颜色和图标清晰表达消息类型
 * 3. 可关闭性 - 用户可手动关闭消息
 * 4. 响应式设计 - 适配不同屏幕尺寸
 * 5. 可访问性 - 支持屏幕阅读器和键盘操作
 *
 * @usage
 * 通过全局函数使用：
 * ```javascript
 * // 基本用法
 * showToast('操作成功完成！');
 *
 * // 带类型的用法
 * showToast({
 *   message: '保存成功！',
 *   type: 'success',
 *   duration: 2000
 * });
 *
 * // 错误提示
 * showToast({
 *   message: '网络连接失败，请重试',
 *   type: 'error',
 *   duration: 5000
 * });
 *
 * // 关闭特定 toast
 * const toastId = showToast('正在处理...');
 * setTimeout(() => closeToast(toastId), 1000);
 *
 * // 清除所有 toast
 * clearAllToasts();
 * ```
 *
 * @props
 * - message: string - 显示的消息内容
 * - type: ToastType - 消息类型，影响样式和图标 ('info' | 'success' | 'warning' | 'error')
 * - id: string - 唯一标识符
 */

import {
    CloseIcon,
    ErrorIcon,
    InfoIcon,
    SuccessIcon,
    WarningIcon,
} from '../../index-astro';
import { cn } from '../../src/class';
import type { ToastType } from './types';
import { getToastStyle } from './types';

export interface Props {
    /**
     * 显示的消息内容
     */
    message: string;

    /**
     * 消息类型，影响样式和图标
     */
    type: ToastType;

    /**
     * 唯一标识符
     */
    id: string;
}

const { message, type, id } = Astro.props;

const style = getToastStyle(type);

// 根据类型选择图标
const IconComponent = {
    info: InfoIcon,
    success: SuccessIcon,
    warning: WarningIcon,
    error: ErrorIcon,
}[type];

// 使用 classBuilder 构建 toast 类名
const toastClass = cn()
    .add('cosy:alert', 'cosy:shadow-lg')
    .flex()
    .items('center')
    .gap(3)
    .add('cosy:pr-2')
    .add(
        'cosy:transform',
        'cosy:transition-all',
        'cosy:duration-300',
        'cosy:ease-in-out'
    )
    .add('cosy:translate-x-full', 'cosy:opacity-0')
    .add('toast-enter:cosy:translate-x-0', 'toast-enter:cosy:opacity-100')
    .add('toast-exit:cosy:translate-x-full', 'toast-exit:cosy:opacity-0')
    .add(style.bg, style.border)
    .build();
---

<div class={toastClass} data-toast-id={id} role="alert" aria-live="polite">
    <IconComponent size="20px" />
    <span class="cosy:flex-1 cosy:text-sm cosy:font-medium">{message}</span>
    <button
        class="cosy:btn cosy:btn-ghost cosy:btn-xs cosy:btn-circle cosy:opacity-70 hover:cosy:opacity-100"
        onclick={`window.closeToast?.('${id}')`}
        aria-label="关闭通知"
        type="button">
        <CloseIcon size="16px" />
    </button>
</div>
