---
/**
 * @component AppLayout
 * @description 应用布局组件，适用于页面布局，包含头部导航、侧边栏导航和目录
 * @usage 用于创建包含头部、侧边栏、主内容区和页脚的完整页面布局
 * @props
 *
 * @prop {Object} [footerConfig] - 页脚配置，包含站点信息、社交媒体链接等
 * @prop {Object} [headerConfig] - 头部配置，传递给AppHeader组件
 * @prop {number} [loadingDelay=100] - 加载中界面延迟显示的时间（毫秒）
 * @prop {Object} [mainContentConfig] - 主内容区域配置
 * @prop {Object} [metaConfig] - 元数据配置，包含页面标题、描述等
 * @prop {boolean} [showFooter=true] - 是否显示页脚
 * @prop {boolean} [showHeader=true] - 是否显示头部
 * @prop {boolean} [showSidebar=true] - 是否显示侧边栏
 * @prop {Object} [sidebarConfig] - 侧边栏配置，包含导航项等
 * @prop {...HTMLAttributes<'div'>} [rest] - 其他HTML div标签属性
 * @slots
 * @slot background - 自定义背景层（最低层，用于渐变、图片等背景效果）
 * @slot default - 主内容区域
 * @slot footer - 自定义全局footer（优先级最高，会覆盖内置Footer）
 * @slot header - 自定义全局header（优先级最高，会覆盖内置AppHeader）
 * @slot navbar-start - 导航栏开始位置的内容（传递给AppHeader）
 * @slot navbar-center - 导航栏中间位置的内容（传递给AppHeader）
 * @slot navbar-end - 导航栏结束位置的内容（传递给AppHeader）
 * @slot modal-search - 搜索模态框内容，当提供此slot时会显示搜索按钮（传递给AppHeader）
 *
 * 布局效果：
 *
 * 移动端：
 * ```
 * +------------------+
 * |     Header      |
 * +------------------+
 * | Sidebar (1 line) |
 * +------------------+
 * |                  |
 * |   Main Content   |
 * |                  |
 * |                  |
 * +------------------+
 * |     Footer      |
 * +------------------+
 * ```
 *
 * 桌面端：
 * ```
 * +------------------+
 * |      Header     |
 * +--------+---------+
 * |        |         |
 * |Sidebar | Content |
 * |        |         |
 * |        |         |
 * +--------+---------+
 * |      Footer     |
 * +------------------+
 * ```
 *
 * @example
 * ```astro
 * ---
 * import AppLayout from '../layouts/AppLayout.astro';
 *
 * const sidebarItems = [
 *   { title: "入门", items: [
 *     { href: "/docs/getting-started", text: "快速开始" },
 *     { href: "/docs/installation", text: "安装" }
 *   ]},
 *   { title: "组件", items: [
 *     { href: "/docs/components/button", text: "Button 按钮" },
 *     { href: "/docs/components/card", text: "Card 卡片" }
 *   ]}
 * ];
 * ---
 *
 * <AppLayout
 *   metaConfig={{
 *     title: "文档标题",
 *     description: "文档描述"
 *   }}
 *   sidebarConfig={{
 *     sidebarItems: sidebarItems
 *   }}
 * >
 *   <h1>文档内容</h1>
 *   <p>这是文档的主要内容</p>
 * </AppLayout>
 * ```
 *
 * 自定义页脚示例：
 * ```astro
 * <AppLayout
 *   metaConfig={{
 *     title: "文档标题",
 *     description: "文档描述"
 *   }}
 *   sidebarConfig={{
 *     sidebarItems: sidebarItems
 *   }}
 *   footerConfig={{
 *     slogan: "简单而强大的组件库",
 *     inspirationalSlogan: "让开发更加愉悦",
 *     socialLinks: [
 *       "https://github.com/myorg/myrepo",
 *       "https://twitter.com/myorg"
 *     ],
 *     products: [
 *       { name: "组件库", href: "/components" },
 *       { name: "模板", href: "/templates" }
 *     ]
 *   }}
 * >
 *   <h1>文档内容</h1>
 *   <p>这是文档的主要内容</p>
 * </AppLayout>
 * ```
 *
 * 组件支持多种页脚相关的配置参数，可以通过以 `footer` 为前缀的属性来自定义页脚的内容和链接。
 * 所有这些参数都是可选的，组件会为常用参数提供默认值。
 *
 * 全宽内容区域示例：
 * ```astro
 * <AppLayout
 *   metaConfig={{
 *     title: "文档标题",
 *     description: "文档描述"
 *   }}
 *   sidebarConfig={{
 *     sidebarItems: sidebarItems
 *   }}
 *   mainContentConfig={{
 *     fullWidth: true
 *   }}
 * >
 *   <!-- 全宽Hero部分，无需容器限制 -->
 *   <div class="cosy:bg-primary cosy:p-10 cosy:text-white cosy:text-center">
 *     <h1 class="cosy:text-3xl">全宽Hero部分</h1>
 *     <p class="cosy:mt-4">没有容器限制，宽度可以100%占满</p>
 *   </div>
 *
 *   <!-- 自定义容器部分 -->
 *   <div class="cosy:mx-auto cosy:p-6 cosy:container">
 *     <p>在全宽模式下，您可以自行控制内容的容器和间距</p>
 *     <p>这使得创建全宽背景的同时，保持内容在合适的宽度内</p>
 *   </div>
 *
 *   <!-- 另一个全宽部分 -->
 *   <div class="cosy:bg-accent cosy:mt-8 cosy:p-10">
 *     <div class="cosy:mx-auto cosy:container">
 *       <h2 class="cosy:text-2xl">灵活的布局</h2>
 *       <p>您可以自由组合全宽区域和容器限制区域</p>
 *     </div>
 *   </div>
 * </AppLayout>
 * ```
 *
 * 调试模式示例：
 * ```astro
 * <AppLayout
 *   metaConfig={{
 *     title: "文档标题",
 *     description: "文档描述"
 *   }}
 *   sidebarConfig={{
 *     sidebarItems: sidebarItems
 *   }}
 * >
 *   <h1>文档内容</h1>
 *   <p>这是文档的主要内容</p>
 * </AppLayout>
 * ```
 *
 * 自定义导航栏示例：
 * ```astro
 * <AppLayout
 *   metaConfig={{
 *     title: "文档标题",
 *     description: "文档描述"
 *   }}
 *   sidebarConfig={{
 *     sidebarItems: sidebarItems
 *   }}
 * >
 *   <!-- 导航栏开始位置 -->
 *   <div slot="navbar-start">
 *     <h1 class="cosy:text-xl cosy:font-bold">我的应用</h1>
 *   </div>
 *
 *   <!-- 导航栏中间位置 -->
 *   <div slot="navbar-center">
 *     <nav class="cosy:flex cosy:gap-4">
 *       <a href="/docs" class="cosy:link cosy:link-hover">文档</a>
 *       <a href="/components" class="cosy:link cosy:link-hover">组件</a>
 *       <a href="/examples" class="cosy:link cosy:link-hover">示例</a>
 *     </nav>
 *   </div>
 *
 *   <!-- 导航栏结束位置 -->
 *   <div slot="navbar-end">
 *     <button class="cosy:btn cosy:btn-primary">登录</button>
 *   </div>
 *
 *   <h1>文档内容</h1>
 *   <p>这是文档的主要内容</p>
 * </AppLayout>
 * ```
 *
 * 搜索功能示例：
 * ```astro
 * <AppLayout
 *   metaConfig={{
 *     title: "文档标题",
 *     description: "文档描述"
 *   }}
 *   sidebarConfig={{
 *     sidebarItems: sidebarItems
 *   }}
 * >
 *   <h1>文档内容</h1>
 *   <p>这是文档的主要内容</p>
 *
 *   <!-- 提供搜索模态框内容，会自动显示搜索按钮 -->
 *   <div slot="modal-search">
 *     <div class="cosy:space-y-4">
 *       <input
 *         type="text"
 *         placeholder="搜索文档..."
 *         class="cosy:input cosy:input-bordered cosy:w-full"
 *       />
 *       <div class="cosy:flex cosy:gap-2">
 *         <button class="cosy:btn cosy:btn-primary">搜索</button>
 *         <button class="cosy:btn cosy:btn-ghost">清除</button>
 *       </div>
 *     </div>
 *   </div>
 * </AppLayout>
 * ```
 *
 * 自定义Header示例：
 * ```astro
 * <AppLayout
 *   metaConfig={{
 *     title: "文档标题",
 *     description: "文档描述"
 *   }}
 *   sidebarConfig={{
 *     sidebarItems: sidebarItems
 *   }}
 * >
 *   <!-- 使用自定义 header slot，将横跨整个页面宽度 -->
 *   <header slot="header" class="cosy:bg-primary cosy:text-white cosy:p-4">
 *     <div class="cosy:container cosy:mx-auto cosy:flex cosy:items-center cosy:justify-between">
 *       <h1 class="cosy:text-xl cosy:font-bold">我的品牌</h1>
 *       <nav class="cosy:flex cosy:gap-4">
 *         <a href="/" class="cosy:hover:underline">首页</a>
 *         <a href="/docs" class="cosy:hover:underline">文档</a>
 *         <a href="/about" class="cosy:hover:underline">关于</a>
 *       </nav>
 *     </div>
 *   </header>
 *
 *   <h1>文档内容</h1>
 *   <p>自定义的 header 会横跨整个页面宽度，不受侧边栏限制</p>
 * </AppLayout>
 * ```
 *
 * 自定义Footer示例：
 * ```astro
 * <AppLayout
 *   metaConfig={{
 *     title: "文档标题",
 *     description: "文档描述"
 *   }}
 *   sidebarConfig={{
 *     sidebarItems: sidebarItems
 *   }}
 * >
 *   <h1>文档内容</h1>
 *   <p>这是文档的主要内容</p>
 *
 *   <!-- 使用自定义 footer slot，将横跨整个页面宽度 -->
 *   <footer slot="footer" class="cosy:bg-base-200 cosy:p-8">
 *     <div class="cosy:container cosy:mx-auto">
 *       <div class="cosy:grid cosy:grid-cols-1 cosy:md:grid-cols-3 cosy:gap-8">
 *         <div>
 *           <h3 class="cosy:font-bold cosy:text-lg cosy:mb-4">关于我们</h3>
 *           <p class="cosy:text-sm">我们致力于提供最好的产品和服务</p>
 *         </div>
 *         <div>
 *           <h3 class="cosy:font-bold cosy:text-lg cosy:mb-4">快速链接</h3>
 *           <ul class="cosy:space-y-2">
 *             <li><a href="/docs" class="cosy:link cosy:link-hover">文档</a></li>
 *             <li><a href="/blog" class="cosy:link cosy:link-hover">博客</a></li>
 *           </ul>
 *         </div>
 *         <div>
 *           <h3 class="cosy:font-bold cosy:text-lg cosy:mb-4">联系方式</h3>
 *           <p class="cosy:text-sm">email@example.com</p>
 *         </div>
 *       </div>
 *       <div class="cosy:mt-8 cosy:pt-8 cosy:border-t cosy:text-center cosy:text-sm">
 *         <p>&copy; 2025 我的公司. All rights reserved.</p>
 *       </div>
 *     </div>
 *   </footer>
 * </AppLayout>
 * ```
 *
 * 自定义背景示例：
 * ```astro
 * <AppLayout
 *   metaConfig={{
 *     title: "文档标题",
 *     description: "文档描述"
 *   }}
 *   sidebarConfig={{
 *     sidebarItems: sidebarItems
 *   }}
 * >
 *   <!-- 自定义背景层，渲染在最底层 -->
 *   <div slot="background" class="cosy:fixed cosy:inset-0 cosy:bg-gradient-to-br cosy:from-blue-600 cosy:to-purple-800">
 *     <!-- 装饰性模糊元素 -->
 *     <div class="cosy:absolute cosy:top-10 cosy:left-10 cosy:w-96 cosy:h-96 cosy:bg-white/10 cosy:rounded-full cosy:blur-3xl"></div>
 *     <div class="cosy:absolute cosy:bottom-10 cosy:right-10 cosy:w-96 cosy:h-96 cosy:bg-white/10 cosy:rounded-full cosy:blur-3xl"></div>
 *   </div>
 *
 *   <h1>文档内容</h1>
 *   <p>背景层会在所有内容下方渲染</p>
 * </AppLayout>
 * ```
 */

import "../../style.ts";
import {
	BaseLayout,
	type IAppLayoutProps,
	Footer,
	Container,
	Main,
	Sidebar,
	Modal,
	Skeleton,
} from "../../index-astro";
import {
	getSidebarTopClass,
	getSidebarHeightClass,
	type HeaderHeight,
} from "../../src/common/index";
import AppHeader from "./AppHeader.astro";

export interface IAppLayoutAllProps extends IAppLayoutProps {
	/** 是否启用 Astro ClientRouter */
	enableClientRouter?: boolean;
}

export type Props = IAppLayoutAllProps;

const {
	sidebarConfig,
	showHeader = true,
	showFooter = true,
	showSidebar = true,
	mainContentConfig,
	footerConfig,
	headerConfig,
	metaConfig,
	loadingDelay = 100,
	bodyOnly = false,
	theme,
	enableClientRouter = true,
}: Props = Astro.props as Props;

const sidebarTopClass = getSidebarTopClass(
	headerConfig?.height as HeaderHeight,
);
const sidebarHeightClass = getSidebarHeightClass(
	headerConfig?.height as HeaderHeight,
);
---

<BaseLayout
    {...metaConfig}
    bodyOnly={bodyOnly}
    theme={theme}
    enableClientRouter={enableClientRouter}>
    <!-- 背景层（最底层，z-index: 0） -->
    {
        Astro.slots.has('background') && (
            <div
                aria-label="AppLayout-Background"
                style="position: fixed; inset: 0; z-index: 0; pointer-events: none;">
                <slot name="background" />
            </div>
        )
    }

    {
        // 优先级：自定义 header slot > 内置 AppHeader > 不显示
        Astro.slots.has('header') ? (
            <slot name="header" />
        ) : showHeader ? (
            <AppHeader
                headerConfig={headerConfig}
                showSidebar={showSidebar}
                showSearch={Astro.slots.has('modal-search')}>
                <slot name="navbar-start" slot="navbar-start" />
                <slot name="navbar-center" slot="navbar-center" />
                <slot name="navbar-end" slot="navbar-end" />
            </AppHeader>
        ) : null
    }

    <Container
        aria-label="AppLayout-Container"
        flex="row"
        gap="none"
        padding="none"
        width="full"
        centered={true}
        class="cosy:min-h-screen cosy:relative cosy:z-[1]">
        <!-- 侧边栏容器 -->
        {
            showSidebar && (
                <div
                    aria-label="AppLayout-Sidebar-Container"
                    class:list={[
                        'cosy:sticky',
                        sidebarTopClass,
                        sidebarHeightClass,
                    ]}>
                    <Sidebar {...(sidebarConfig as any)} />
                </div>
            )
        }

        <!-- 主内容区域 -->
        <Main
            aria-label="AppLayout-Main-Container"
            {...mainContentConfig}
            class="cosy:flex-1 cosy:min-w-xs">
            <Skeleton
                showLoading={true}
                loadingSize="xl"
                loadingDelay={loadingDelay}
                skeletonClass="cosy:w-full cosy:h-screen cosy:flex cosy:items-center cosy:justify-center">
                <slot />
            </Skeleton>
        </Main>
    </Container>

    <!-- Footer -->
    {
        // 优先级：自定义 footer slot > 内置 Footer > 不显示
        Astro.slots.has('footer') ? (
            <slot name="footer" />
        ) : showFooter ? (
            <Container
                aria-label="AppLayout-Footer-Container"
                width="full"
                padding="none">
                <Footer {...footerConfig} />
            </Container>
        ) : null
    }

    <!-- 搜索模态框 -->
    {
        Astro.slots.has('modal-search') && (
            <Modal id="modalSearch" title="搜索">
                <slot name="modal-search" />
            </Modal>
        )
    }

    <script>
        // Handle sidebar toggle
        const sidebarToggle = document.getElementById('sidebar-toggle');
        const sidebar = document.getElementById('sidebar-mobile');
        const sidebarOverlay = document.getElementById('sidebar-overlay');

        function toggleSidebar() {
            sidebar?.classList.toggle('cosy:hidden');
            sidebarOverlay?.classList.toggle('cosy:hidden');
            document.body.classList.toggle('cosy:overflow-hidden');
        }

        sidebarToggle?.addEventListener('click', toggleSidebar);
        sidebarOverlay?.addEventListener('click', toggleSidebar);
    </script>
</BaseLayout>
