---
/**
 * @component ImageRow
 * @description 图片行组件，用于展示一行图片，基于 Container 组件，支持丰富的背景配置
 * @usage
 * ```astro
 * <ImageRow
 *   images={[
 *     { src: '/image1.jpg', alt: '图片1' },
 *     { src: '/image2.jpg', alt: '图片2' }
 *   ]}
 *   gap="md"
 *   background="primary/10"
 * />
 * ```
 * @props
 * @prop {ImageItem[]} images - 图片数组
 * @prop {string} [gap='md'] - 图片间距，可选值：none、xs、sm、md、lg、xl
 * @prop {string} [rounded='md'] - 图片圆角，可选值：none、sm、md、lg、xl、2xl、3xl、full
 * @prop {string} [shadow='md'] - 图片阴影，可选值：none、sm、md、lg、xl、2xl
 * @prop {string} [hover='scale'] - 悬停效果，可选值：none、scale、brightness、blur
 * @prop {string} [background] - 背景色类型，支持所有 Tailwind 背景色和透明度变体
 * @prop {string} [padding='md'] - 内边距大小，可选值：none、sm、md、lg、xl、2xl、3xl、4xl
 * @prop {string} [margin='none'] - 外边距大小，可选值：none、xs、sm、md、lg、xl、2xl、3xl、4xl、5xl、6xl
 * @prop {boolean} [border=false] - 是否显示边框
 * @prop {string} [width='md'] - 容器宽度，可选值：xs、sm、md、lg、xl、full
 * @prop {string} [class] - 自定义 CSS 类名
 * @slots
 * @slot default - 图片内容
 */
import '../../style.ts';
import type { ImageItem } from './types';
import type {
  BackgroundColor,
  Size,
  PaddingSize,
  MarginSize,
  RoundedSize,
  GapSize,
  ShadowSize,
  HoverEffect,
} from '../../src/common';
import {
  gapClasses,
  roundedClasses,
  shadowClasses,
  hoverClasses,
} from '../../src/common';
import Container from '../container/Container.astro';

interface Props {
  images: ImageItem[];
  gap?: GapSize;
  rounded?: RoundedSize;
  shadow?: ShadowSize;
  hover?: HoverEffect;
  background?: BackgroundColor;
  padding?: PaddingSize;
  margin?: MarginSize;
  border?: boolean;
  width?: Size;
  class?: string;
}

const {
  images,
  gap = 'md',
  rounded = 'md',
  shadow = 'md',
  hover = 'scale',
  background,
  padding = 'md',
  margin = 'none',
  border = false,
  width = 'md',
  class: className = '',
} = Astro.props;

const gapClass = gapClasses[gap] || '';
const roundedClass = roundedClasses[rounded] || '';
const shadowClass = shadowClasses[shadow] || '';
const hoverClass = hoverClasses[hover] || '';

// 生成容器类名
const getContainerClass = () => {
  const baseClass = 'image-row-container';
  const gapClassValue = gapClass;
  const customClass = className;

  return `${baseClass} ${gapClassValue} ${customClass}`.trim();
};

// 生成图片类名
const getImageClass = (index: number) => {
  const baseClass = 'image-row-item';
  const roundedClassValue = roundedClass;
  const shadowClassValue = shadowClass;
  const hoverClassValue = hoverClass;

  return `${baseClass} ${roundedClassValue} ${shadowClassValue} ${hoverClassValue}`.trim();
};
---

<Container
  background={background}
  padding={padding}
  margin={margin}
  border={border}
  width={width}
  class={className}>
  <div class={getContainerClass()}>
    {
      images.map((image, index) => (
        <div class={getImageClass(index)}>
          <img
            src={image.src}
            alt={image.alt}
            width={image.width}
            height={image.height}
            loading={image.loading || 'lazy'}
            class="cosy:w-full cosy:h-full cosy:object-cover"
          />
          {image.caption && (
            <div class="image-row-caption">
              <p class="cosy:text-sm cosy:text-gray-600 cosy:mt-2 cosy:text-center">
                {image.caption}
              </p>
            </div>
          )}
        </div>
      ))
    }
  </div>
</Container>

<style>
  .image-row-container {
    display: flex;
    align-items: center;
    overflow-x: auto;
    scrollbar-width: none;
    -ms-overflow-style: none;
  }

  .image-row-container::-webkit-scrollbar {
    display: none;
  }

  .image-row-item {
    position: relative;
    overflow: hidden;
    flex: 0 0 auto;
    width: 200px;
    height: 150px;
  }

  .image-row-caption {
    position: absolute;
    bottom: 0;
    left: 0;
    right: 0;
    background: linear-gradient(transparent, rgba(0, 0, 0, 0.7));
    padding: 0.5rem;
    color: white;
  }

  .image-row-caption p {
    color: white !important;
    margin: 0 !important;
  }

  /* 响应式设计 */
  @media (max-width: 768px) {
    .image-row-item {
      width: 150px;
      height: 120px;
    }
  }

  @media (max-width: 480px) {
    .image-row-item {
      width: 120px;
      height: 100px;
    }
  }
</style>
