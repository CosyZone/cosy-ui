---
/**
 * @component Banner
 *
 * @description
 * Banner 组件用于在页面中展示醒目的横幅信息，通常用于展示重要的标语、公告或营销信息。
 *
 * @usage
 * 基本用法：
 * ```astro
 * <Banner>欢迎使用我们的服务</Banner>
 * ```
 *
 * 指定动画效果：
 * ```astro
 * <Banner animation="fade">淡入效果的横幅</Banner>
 * ```
 *
 * @props
 * @prop {string} [animation='both'] - 动画效果类型：none（无动画）、fade（仅淡入）、slide（仅上滑）、both（淡入和上滑）
 * @prop {string} [bgColor='primary'] - 背景颜色，支持基础颜色和渐变色彩：primary、secondary、accent、info、success、warning、error，以及各种渐变色彩如 gradient-sky、gradient-sunset、gradient-forest、gradient-ocean、gradient-mountain、gradient-flower、gradient-watermelon、gradient-lemon、gradient-grape、gradient-blueberry、gradient-mango、gradient-kiwi、gradient-pitaya、gradient-banana
 * @prop {string} [class] - 自定义CSS类，可用于覆盖默认样式
 * @prop {string} [style] - 自定义CSS样式，可用于覆盖默认样式
 * @prop {string} [textColor] - 文本颜色，默认根据背景色自动设置，可手动指定颜色值
 *
 * @slots
 * @slot default - Banner 中显示的文本内容
 *
 * @accessibility
 * - 使用适当的字体大小和行高，确保文本可读性
 * - 动画遵循 prefers-reduced-motion 媒体查询，尊重用户的动画偏好设置
 */

import '../../style.ts';
import type { IBannerPropsBase } from '../../src/components/banner/bannerPropsBase';
import { renderBanner } from '../../src/components/banner/renderBanner';

type IProps = IBannerPropsBase;

const props = Astro.props as IProps;

// 渲染 slot 内容（Astro 特定操作）
const slotContent = await Astro.slots.render('default');

// 调用框架无关的 HTML 生成器
const bannerHtml = renderBanner(props, slotContent);
---

<Fragment set:html={bannerHtml} />
