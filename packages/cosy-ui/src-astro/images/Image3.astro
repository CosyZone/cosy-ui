---
/**
 * @component Image3
 * @description 展示三张图片的组件，中间图片直立，两侧图片倾斜
 * @example
 * <Image3
 *   images={[
 *     { src: 'image1.jpg', alt: '图片1' },
 *     { src: 'image2.jpg', alt: '图片2' },
 *     { src: 'image3.jpg', alt: '图片3' }
 *   ]}
 *   tiltAngle={15}
 *   spacing="md"
 * />
 */
import type { Image3Props } from './image3-types';
import Image3ErrorView from './Image3ErrorView.astro';
import { Container } from '../container';

const {
  images,
  class: className = '',
  tiltAngle = 15,
  spacing = 'md',
  shadow = 'md',
  rounded = 'lg',
} = Astro.props as Image3Props;

// 验证图片数量
const isValidImages = images && Array.isArray(images) && images.length === 3;

// 间距映射
const spacingMap = {
  sm: 'gap-4',
  md: 'gap-6',
  lg: 'gap-8',
};

// 阴影映射
const shadowMap = {
  none: '',
  sm: 'shadow-sm',
  md: 'shadow-md',
  lg: 'shadow-lg',
  xl: 'shadow-xl',
};

// 圆角映射
const roundedMap = {
  none: 'rounded-none',
  sm: 'rounded-sm',
  md: 'rounded-md',
  lg: 'rounded-lg',
  xl: 'rounded-xl',
  '2xl': 'rounded-2xl',
  '3xl': 'rounded-3xl',
  full: 'rounded-full',
};

// Container 已经处理了 flex 布局，内部只需要简单的 fle
const imageClass =
  `object-cover transition-transform duration-300 hover:scale-105 ${shadowMap[shadow]} ${roundedMap[rounded]}`.trim();
---

{isValidImages ? (
  <Container class={className} flex="row" items="center" justify="center" gap={spacing}>
      <!-- 左侧图片 - 向右倾斜 -->
      <div
        class="relative z-10"
        style={`transform: rotate(${tiltAngle}deg); transform-origin: center;`}>
        <img
          src={images[0].src}
          alt={images[0].alt}
          width={images[0].width || 200}
          height={images[0].height || 300}
          loading={images[0].loading || 'lazy'}
          class={imageClass}
        />
      </div>

      <!-- 中间图片 - 直立 -->
      <div class="relative z-20">
        <img
          src={images[1].src}
          alt={images[1].alt}
          width={images[1].width || 250}
          height={images[1].height || 350}
          loading={images[1].loading || 'lazy'}
          class={imageClass}
        />
      </div>

      <!-- 右侧图片 - 向左倾斜 -->
      <div
        class="relative z-10"
        style={`transform: rotate(-${tiltAngle}deg); transform-origin: center;`}>
        <img
          src={images[2].src}
          alt={images[2].alt}
          width={images[2].width || 200}
          height={images[2].height || 300}
          loading={images[2].loading || 'lazy'}
          class={imageClass}
        />
      </div>
  </Container>
) : (
  <Image3ErrorView 
    imagesCount={images ? images.length : 0} 
    class={className} 
  />
)}
