---
/**
 * @component ProductHero
 *
 * @description
 * ProductHero 组件是 ProductHeroItem 的容器组件，用于展示多个产品的详细信息。
 * 采用苹果风格的大图展示设计，支持左右交替布局，提供优雅的产品展示体验。
 * 适用于产品展示页面、产品详情页等场景。
 *
 * @design
 * 设计理念：
 * 1. 大图展示 - 突出产品图片，采用高质量大图展示
 * 2. 交替布局 - 自动左右交替布局，增加视觉层次
 * 3. 信息层次 - 清晰的信息层次：标签、标题、描述、价格、按钮
 * 4. 苹果风格 - 采用苹果官网的简洁、优雅设计风格
 * 5. 响应式设计 - 在不同设备上都能良好展示
 *
 * @usage
 * 基本用法：
 * ```astro
 * <ProductHero
 *   products={[
 *     {
 *       name: "极简手机",
 *       description: "纯净体验，回归本质",
 *       image: "/images/products/phone.jpg",
 *       price: "¥6,999",
 *       isNew: true
 *     },
 *     {
 *       name: "智能手表",
 *       description: "健康生活，简约开始",
 *       image: "/images/products/watch.jpg",
 *       price: "¥2,999",
 *       isNew: false
 *     }
 *   ]}
 *   buyNowText="立即购买"
 *   learnMoreText="了解更多"
 * />
 * ```
 *
 * 自定义背景色：
 * ```astro
 * <ProductHero
 *   products={products}
 *   backgrounds={["gradient-sky", "primary/10"]}
 *   buyNowText="立即购买"
 *   learnMoreText="了解更多"
 * />
 * ```
 *
 * 自定义按钮文本：
 * ```astro
 * <ProductHero
 *   products={products}
 *   buyNowText="立即购买"
 *   learnMoreText="了解更多"
 *   newLabelText="新品"
 * />
 * ```
 */

import { ProductHeroItem } from '../../index-astro';
import '../../style.ts';
import type { Props as ProductHeroItemProps } from './ProductHeroItem.astro';
import type { BackgroundColor } from '../../src/common/backgrounds';

// 定义产品项类型
type ProductItem = Omit<
  ProductHeroItemProps,
  | 'align'
  | 'background'
  | 'buyNowText'
  | 'learnMoreText'
  | 'newLabelText'
  | 'onBuyNow'
  | 'onLearnMore'
  | 'class'
>;

export interface Props {
  /**
   * 产品数据数组
   */
  products: ProductItem[];
  /**
   * 背景色类型数组
   * 使用预定义的背景色类型，如 'primary', 'base-200', 'gradient-sky' 等
   * 组件会循环使用这些背景色，如果只有一个背景色则所有产品项都使用该背景色
   */
  backgrounds?: BackgroundColor[];
  /**
   * 购买按钮文本
   */
  buyNowText?: string;
  /**
   * 了解更多按钮文本
   */
  learnMoreText?: string;
  /**
   * 新品标签文本
   */
  newLabelText?: string;
  /**
   * 购买按钮点击事件
   */
  onBuyNow?: (product: ProductItem, index: number) => void;
  /**
   * 了解更多按钮点击事件
   */
  onLearnMore?: (product: ProductItem, index: number) => void;
  /**
   * 自定义类名
   */
  class?: string;
}

const {
  products,
  backgrounds,
  buyNowText = '立即购买',
  learnMoreText = '了解更多',
  newLabelText = '新品',
  onBuyNow,
  onLearnMore,
  class: className = '',
} = Astro.props;

// 默认背景色数组，用于交替显示
const defaultBackgrounds: BackgroundColor[] = ['base-200', 'base-100'];
---

<div class={className}>
  {
    products.map((product, index) => {
      // 计算当前产品的背景
      const availableBackgrounds =
        backgrounds && backgrounds.length > 0
          ? backgrounds
          : defaultBackgrounds;
      const currentBackground =
        availableBackgrounds[index % availableBackgrounds.length];

      // 计算布局对齐方式（左右交替）
      const align = index % 2 === 0 ? 'left' : 'right';

      return (
        <ProductHeroItem
          {...product}
          align={align}
          background={currentBackground}
          buyNowText={buyNowText}
          learnMoreText={learnMoreText}
          newLabelText={newLabelText}
          onBuyNow={onBuyNow ? () => onBuyNow(product, index) : undefined}
          onLearnMore={
            onLearnMore ? () => onLearnMore(product, index) : undefined
          }
        />
      );
    })
  }
</div>
