---
/**
 * @component LoadingOverlay
 *
 * @description
 * LoadingOverlay 组件是一个全屏加载弹出层，用于在页面跳转时显示加载状态。
 * 它监听 Astro 的页面过渡事件，在跳转开始时延迟显示，跳转完成后隐藏。
 * 为了避免频繁的视觉干扰，只有在加载时间超过指定延迟时间（默认1秒）时才显示。
 *
 * @design
 * 设计理念：
 * 1. 全屏覆盖 - 使用固定定位覆盖整个视口
 * 2. 居中显示 - 加载指示器在屏幕中央显示
 * 3. 平滑动画 - 使用淡入淡出动画效果
 * 4. 延迟显示 - 避免短时间加载的视觉干扰
 * 5. 可定制性 - 支持自定义加载文本、样式和延迟时间
 *
 * @usage
 * 基本用法：
 * ```astro
 * ---
 * import { LoadingOverlay } from '@coffic/cosy-ui';
 * ---
 *
 * <LoadingOverlay />
 * ```
 *
 * 自定义延迟时间：
 * ```astro
 * <LoadingOverlay delay={2000} text="页面加载中..." />
 * ```
 *
 * 自定义样式：
 * ```astro
 * <LoadingOverlay
 *   text="正在跳转..."
 *   class="custom-loading-overlay"
 *   delay={1500}
 * />
 * ```
 */

import '../../style.ts';

export interface Props {
  /** 加载文本 */
  text?: string;
  /** 自定义 CSS 类名 */
  class?: string;
  /** 是否显示加载动画 */
  showSpinner?: boolean;
  /** 加载动画类型 */
  spinnerType?: 'dots' | 'spinner' | 'pulse';
  /** 延迟显示时间（毫秒），默认1000ms */
  loadingDelay?: number;
}

const {
  text = 'Loading...',
  class: className,
  showSpinner = true,
  spinnerType = 'dots',
  loadingDelay = 1000,
} = Astro.props;

// 生成唯一的 ID
const overlayId = `loading-overlay-${Math.random().toString(36).substr(2, 9)}`;
---

<div
  id={overlayId}
  class:list={[
    'cosy:fixed cosy:inset-0 cosy:z-[9999] cosy:bg-black/50 cosy:backdrop-blur-sm',
    'cosy:flex cosy:items-center cosy:justify-center',
    'cosy:opacity-0 cosy:pointer-events-none cosy:transition-opacity cosy:duration-300',
    className,
  ]}
  data-loading-overlay>
  <div
    class="cosy:bg-white cosy:dark:bg-gray-800 cosy:rounded-lg cosy:shadow-xl cosy:p-6 cosy:max-w-sm cosy:w-full cosy:mx-4">
    <div class="cosy:flex cosy:flex-col cosy:items-center cosy:space-y-4">
      {
        showSpinner && (
          <div class="cosy:flex cosy:justify-center">
            {spinnerType === 'dots' && (
              <div class="cosy:flex cosy:space-x-1">
                <div class="cosy:w-2 cosy:h-2 cosy:bg-blue-500 cosy:rounded-full cosy:animate-bounce" />
                <div
                  class="cosy:w-2 cosy:h-2 cosy:bg-blue-500 cosy:rounded-full cosy:animate-bounce"
                  style="animation-delay: 0.1s;"
                />
                <div
                  class="cosy:w-2 cosy:h-2 cosy:bg-blue-500 cosy:rounded-full cosy:animate-bounce"
                  style="animation-delay: 0.2s;"
                />
              </div>
            )}
            {spinnerType === 'spinner' && (
              <div class="cosy:w-8 cosy:h-8 cosy:border-4 cosy:border-blue-200 cosy:border-t-blue-500 cosy:rounded-full cosy:animate-spin" />
            )}
            {spinnerType === 'pulse' && (
              <div class="cosy:w-8 cosy:h-8 cosy:bg-blue-500 cosy:rounded-full cosy:animate-pulse" />
            )}
          </div>
        )
      }
      <p
        class="cosy:text-gray-700 cosy:dark:text-gray-300 cosy:text-center cosy:font-medium">
        {text}
      </p>
    </div>
  </div>
</div>

<script define:vars={{ overlayId, loadingDelay }}>
  // 获取加载弹出层元素
  const overlay = document.getElementById(overlayId);

  if (overlay) {
    let loadingStartTime = null;
    let showTimeout = null;
    let isLoading = false;

    // 显示加载弹出层的函数
    const showOverlay = () => {
      if (isLoading) return;

      isLoading = true;
      loadingStartTime = Date.now();

      // 延迟显示，避免短时间加载的视觉干扰
      showTimeout = window.setTimeout(() => {
        overlay.style.opacity = '1';
        overlay.style.pointerEvents = 'auto';
      }, loadingDelay);
    };

    // 隐藏加载弹出层的函数
    const hideOverlay = () => {
      if (showTimeout) {
        clearTimeout(showTimeout);
        showTimeout = null;
      }

      isLoading = false;
      loadingStartTime = null;

      overlay.style.opacity = '0';
      overlay.style.pointerEvents = 'none';
    };

    // 监听 Astro 页面过渡事件
    document.addEventListener('astro:page-load', () => {
      hideOverlay();
    });

    document.addEventListener('astro:before-preparation', () => {
      showOverlay();
    });

    // 监听路由变化
    document.addEventListener('astro:before-swap', () => {
      showOverlay();
    });

    document.addEventListener('astro:after-swap', () => {
      // 如果加载时间很短，立即隐藏
      if (loadingStartTime && Date.now() - loadingStartTime < loadingDelay) {
        hideOverlay();
      } else {
        // 否则延迟隐藏，给用户一个视觉反馈
        setTimeout(() => {
          hideOverlay();
        }, 100);
      }
    });
  }
</script>
