---
/**
 * DesktopSidebar组件
 *
 * 桌面端固定侧边栏组件
 *
 * @example
 * ```astro
 * ---
 * import DesktopSidebar from './DesktopSidebar.astro';
 *
 * const sidebarItems = [
 *   { title: "入门", items: [
 *     { href: "/docs/getting-started", text: "快速开始" },
 *     { href: "/docs/installation", text: "安装" }
 *   ]}
 * ];
 * ---
 *
 * <DesktopSidebar sidebarItems={sidebarItems} />
 * ```
 */

import { SidebarNav } from '../../index-astro';
import type { ISidebarProps } from '../../index-astro';

export interface Props extends ISidebarProps {
    /**
     * 自定义类名
     */
    class?: string;

    /**
     * 是否开启调试模式，显示边框
     * @default false
     */
    debug?: boolean;
}

const { sidebarItems, class: className, debug = false } = Astro.props;

// 自动获取当前路径
const currentPath = Astro.url.pathname;

const debugClass = debug ? 'cosy:border cosy:border-red-500' : '';
---

{/* 桌面端侧边栏 */}
<aside
    data-desktop-sidebar
    data-current-path={currentPath}
    class:list={[
        className,
        debugClass,
        'cosy:hidden cosy:w-60 cosy:lg:block cosy:bg-base-200 cosy:px-4 cosy:overflow-y-auto cosy:h-full',
    ]}>
    <SidebarNav
        sidebarItems={sidebarItems}
        currentPath={currentPath}
        debug={debug}
    />
</aside>

<script>
    import { saveScrollPosition, restoreScrollPosition } from './utils';

    // 处理桌面端侧边栏滚动位置保存和恢复
    document.addEventListener('astro:before-preparation', () => {
        // 保存桌面端滚动位置
        const desktopContent = document.querySelector('[data-desktop-sidebar]');
        if (desktopContent) {
            saveScrollPosition(desktopContent, 'sidebarScrollPosition');
        }
    });

    document.addEventListener('astro:page-load', () => {
        // 恢复桌面端滚动位置
        const desktopContent = document.querySelector('[data-desktop-sidebar]');
        if (desktopContent) {
            restoreScrollPosition(desktopContent, 'sidebarScrollPosition');
        }
    });
</script>
